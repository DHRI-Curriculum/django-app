- image: /static/insight/images/header-anaconda.png
  image_alt: Header image for Keeping your Anaconda installation up to date
  sections:
  - order: 1
    text: ''
    title: How to check your current version of Anaconda
  specific_operating_systems:
    MacOS:
      section: How to check your current version of Anaconda
      text: "<ol>\n<li>Click the Spotlight Search button (the magnifying glass) in\
        \ the top right of your desktop.</li>\n<li>Type <code>terminal</code> into\
        \ the bar that appears.</li>\n<li>Select the first item that appears in the\
        \ list.</li>\n<li>When the Terminal pops up, you will likely see either a\
        \ window with black text over white background or colored text over a black\
        \ background.</li>\n<li>In your Terminal, type <code>conda --version</code>\
        \ and press enter. \n\_\_\_\_The output of your query will tell you which\
        \ version of Anaconda is installed on your computer. <em>E.g.</em>, <code>conda\
        \ 4.7.12</code></li>\n</ol>"
    Windows:
      section: How to check your current version of Anaconda
      text: "<ol>\n<li>Look for Git Bash in your programs menu and open.</li>\n<li>If\
        \ you can't find the git folder, just type <code>git bash</code> in the search\
        \ box and select <code>git bash</code> when it appears.</li>\n<li>Open the\
        \ program.</li>\n<li>When the terminal pops up, you will likely see either\
        \ a window with black text over white background or colored text over a black\
        \ background.You know you're in the right place when you see the <code>$</code>.</li>\n\
        <li>In your terminal, type <code>conda --version</code> and press <code>Enter</code>.\n\
        \_\_\_\_The output of your query will tell you which version of Anaconda is\
        \ installed on your computer. <em>E.g.</em>, <code>conda 4.7.12</code></li>\n\
        </ol>"
  text: <p>From time to time, and especially before you start working on a new project
    or when you are running into unexpected issues, you're going to want to make sure
    that your Anaconda installation and its packages are up to date. Through software
    and package updates developers implement new functionalities, usability improvements,
    ensure compatibility with other software, and especially patch known coding flaws.</p>
  title: Keeping your Anaconda installation up to date
- image: /static/insight/images/header-text-editor.png
  image_alt: Header image for Choosing a text editor
  sections:
  - order: 1
    text: '<p>For our workshops, we will be using <a href="https://code.visualstudio.com/">Visual
      Studio Code</a>. Not only is Visual Studio Code free and open source, but it
      is also consistent across macOS, Windows, and Linux systems.

      You can follow our download and installation instructions for <a href="https://github.com/DHRI-Curriculum/install/blob/v2.0/guides/visual-studio-code.md">Visual
      Studio Code</a> on the installations page.</p>'
    title: Default recommendation
  specific_operating_systems: {}
  text: '<p>An important tool for programming and working in several of the DHRI''s
    workshops is a text editor. A text editor is a program that allows you to edit
    plain text files, such as <code>.txt</code>, <code>.csv</code>, or <code>.md</code>.
    Text editors are not used to edit rich text documents, such as <code>.docx</code>
    or <code>.rtf</code>, and rich text editors should not be used to edit plain text
    files. This is because rich text editors will add many invisible special characters
    that will prevent programs from running and configuration files from being read
    correctly.

    While it doesn''t really matter which text editor you choose, you should try to
    become comfortable with at least one text editor.

    Choosing a text editor has as much to do with personality as it does with functionality.
    Graphical user interfaces (GUIs), user options, and "hackability" vary from program
    to program.</p>'
  title: Choosing a text editor
- image: /static/insight/images/header-jupiter-notebooks.png
  image_alt: Header image for Choosing a text editor
  sections:
  - order: 1
    text: '<p>Jupyter Notebooks is a form of "computational notebook" (sometimes called
      "Notebook Interfaces"). They have existed for decades, and were created to let
      users to combine software code, computational output, explanatory text and multimedia
      resources in a single document. They became popular among researchers for allowing
      them to annotate procedue, data and findings, making it easier for them to later
      reproduce calculations with different data.

      Jupyter Notebooks have exploded in popularity in the past years, becoming by
      far the most used computational notebook.</p>'
    title: What are Notebooks?
  - order: 2
    text: "<p>If you have not already installed Anaconda, please do so. Jupyter Notebook\
      \ comes with Anaconda by default.\nFind and open the Anaconda Navigator on your\
      \ computer (you should be able to find it in the folder with your other applications).\
      \ From Anaconda Navigator's interface, launch a Jupyter Notebook.\n<img alt=\"\
      jupyter\" class=\"img-fluid d-block my-4\" src=\"/static/insight/images/jupyter.png\"\
      />\nJupyter Notebook will open as a tab in your default browser, which is where\
      \ you will be working. All of the directories (folders) in your <code>home</code>\
      \ directory will appear. (This may vary depending on what operating system\u2014\
      macOS, Windows, etc.\u2014you are using, as the file structure can be different)\n\
      We will now open a new file. It is very important that you make sure to open\
      \ the file in the right place, so you can find it later. Navigate on the directories\
      \ clicking on them until you are on the desired directory.\nOnce you are in\
      \ the right place, select <code>New</code> &gt;&gt; <code>Python3</code> in\
      \ the upper right corner.\n<img alt='jupyter notebook \"open new file\" screen'\
      \ class=\"img-fluid d-block my-4\" src=\"/static/insight/images/jupyter1.png\"\
      />\nA blank page with an empty box should appear.\n<img alt=\"empty box on jupyter\
      \ notebook new file\" class=\"img-fluid d-block my-4\" src=\"/static/insight/images/jupyter2.png\"\
      /></p>"
    title: How to open a Jupyter notebook
  - order: 3
    text: '<p>Jupyter Notebook allows you to write and run codes in containers, which
      we call cells. We won''t go deep into how it works since it can get a bit complicated.
      For the moment, it is enough to know that we can run and see the output of the
      lines of code that are inside a cell.

      To try, type some python code. You can try the classic <code>print("hello world!")</code>
      or anything else you want. To run the cell, press <kbd>shift</kbd> + <kbd>enter</kbd>.
      That will give you an output, and create a new cell below.</p>'
    title: Running a cell
  - order: 4
    text: '<p>Your notebook has a kernel, which is like an engine that executes the
      code contained in the cells. Again, we won''t go too deep on this right now.

      What matters is to understand that while you are running codes in a notebook,
      the kernel will remember all the variables you''ve created, libraries you''ve
      imported, etc. And that will be true even if deleted a cell after you ran it.

      This is very powerful, but can be a source of confusion. If you feel you have
      changed things too much, or that you are getting outputs you should not be getting,
      or if you experience some kind of crash, you can always restart the kernel,
      which will "clean" the memory of the kernel, and ask the notebook to run all
      the cells again. In that way, you will guarantee that the kernel will only have
      ran what is currently coded on the cells. To do that, on the top menu, click
      on <code>kernel</code> -&gt; <code>Restart &amp; Run All</code>. You will see
      other options there, feel free to explore them.

      Jupyter Notebook allows you to run cells in any order you want. Again, that
      can be very useful, but it can be quite confusing. At least in the beginning,
      we strongly suggest you to avoid running cells out of order.</p>'
    title: Choosing, Starting, and Restarting a kernel
  - order: 5
    text: '<p>The best way to learn Jupyter Notebook is working with it for a while.
      Once you get more comfortable, make sure to read tutorials to see advanced possibilities.
      We suggest some below.

      Also, it is a good idea to try to learn the keyboard shortcuts. They can save
      you a lot of time in the long run. To see the list of shortcuts, in the top
      menu click on <code>Help</code> &gt;&gt; <code>Keyboard Shortcuts</code>.

      Here are a few that I have found helpful:

      - <a href="https://www.dataquest.io/blog/jupyter-notebook-tips-tricks-shortcuts/">28
      Jupyter Notebook Tips, Tricks and Shortcuts</a>

      - <a href="https://www.youtube.com/watch?v=HW29067qVWk">Corey Schafer''s videos</a>

      - DataQuest''s <a href="https://www.dataquest.io/blog/jupyter-notebook-tutorial">Jupyter
      Notebook for Beginners: A Tutorial</a>

      - Programming Historian''s <a href="https://programminghistorian.org/en/lessons/jupyter-notebooks">longer
      tutorial</a></p>'
    title: Learning more/Resources
  specific_operating_systems: {}
  text: <p>In some of our workshops we use Jupyter Notebooks. Whether you want to
    test short code snippets or document your computational output and complement
    it with text and multimedia resources in a single document, Jupyter Notebooks
    is a great tool to use. Here are our short introduction to how to use Notebooks.</p>
  title: Short Introduction to Jupyter Notebooks
