frontmatter:
  abstract: HTML (Hypertext Markup Language) is used to create and organize the content
    of a website. CSS (Cascading Style Sheets) is used for website design and layout.
    Together, these languages form the foundation of what one needs to know to create
    useful and well-designed websites. This workshop walks participants through the
    fundamentals of HTML and CSS. The purpose of this website is to help participants
    understand the rudiments of making websites, with the intention of providing a
    strong base of knowledge from which to imagine web-based digital humanities projects.
  contributors:
  - collaboration:
      current: true
      role: Au
      workshop: html-css
    first_name: Param
    last_name: Ajmera
    url: https://github.com/paramajmera
  - collaboration:
      current: false
      role: Re
      workshop: html-css
    first_name: Kristen
    last_name: Hackett
    url: https://github.com/hackettka
  - collaboration:
      current: false
      role: Re
      workshop: html-css
    first_name: Stefano
    last_name: Morello
    url: https://github.com/smorello87
  - collaboration:
      current: false
      role: Re
      workshop: html-css
    first_name: Di
    last_name: Yoong
    url: https://github.com/dyoong
  - collaboration:
      current: false
      role: Au
      workshop: html-css
    first_name: Amy
    last_name: Cavender
    url: https://github.com/acavender
  - collaboration:
      current: false
      role: Au
      workshop: html-css
    first_name: Kristen
    last_name: Hackett
    url: https://github.com/hackettka
  - collaboration:
      current: false
      role: Au
      workshop: html-css
    first_name: Patrick
    last_name: Smyth
    url: https://github.com/smythp
  - collaboration:
      current: false
      role: Au
      workshop: html-css
    first_name: Patrick
    last_name: Sweeney
    url: https://github.com/pswee001
  - collaboration:
      current: true
      role: Ed
      workshop: html-css
    first_name: Lisa
    last_name: Rhody
    url: https://github.com/lmrhody
  - collaboration:
      current: true
      role: Ed
      workshop: html-css
    first_name: Kalle
    last_name: Westerling
    url: https://github.com/kallewesterling
  estimated_time: '10'
  ethical_considerations:
  - <p>Building websites can involve making information public on the internet, which
    raises a host of intellectual property legal concerns. It is very important to
    make sure that you prominently declare which creative commons licenses you are
    using for your website so that visitors to your website are aware of the ways
    in which they can use the information that you are providing. Learn more about
    choosing the appropriate creative commons license here on <a href="https://creativecommons.org/choose/"
    rel="nofollow">the Creative Commons website</a>. Similarly, if your website uses
    images, videos, or any kind of document from other sources (like archives, artists,
    newspapers, etc.) you must be sure to cite these sources and make sure that you
    have the necessary permissions to reproduce these works.</p>
  - <p>Creating websites also involves making sure that it is designed to be accessible
    for those with disabilities. If your website displays images, then each image
    should also contain <a href="https://accessibility.psu.edu/images/alttext/" rel="nofollow">alt
    text</a> metadata that describes the image such that it is usable for screenreaders.
    Screenreaders make websites accessible for those with visual and/or auditory disabilities.
    Similarly, if your website involves showcasing audio-based information (like interviews
    or lectures) then you should provide a transcription of the audio. We will go
    over basic practices of making websites accessbile in this workshop. You can learn
    more about accessibility standards and guidelines at the <a href="https://www.w3.org/standards/webdesign/accessibility"
    rel="nofollow">W3C's page on Web Accessibility</a>. Furthermore, there are also
    services like the <a href="https://wave.webaim.org/" rel="nofollow">WAVE tool</a>
    that help identify ways of making websites more accessible.</p>
  learning_objectives:
  - <p>Familiarize yourself with the anatomy of a webpage and how the Internet works.</p>
  - <p>Understand the basics of the HTML and CSS markup languages.</p>
  - <p>Use HTML, CSS, and a text editor to build a small locally-hosted website.</p>
  prerequisites:
  - full_text: '[Introduction to Command Line](https://www.github.com/DHRI-Curriculum/command-line)
      (required) This workshop makes reference to concepts from the Command Line workshop,
      in particular, in creating new folders and files, as well as moving around in
      file directories. Completing the Command Line workshop will make you more comfortable
      with working with HTML/CSS.'
    potential_name: Introduction to Command Line
    type: workshop
  - full_text: '[Visual Studio Code](https://github.com/DHRI-Curriculum/install/blob/v2.0/guides/visual-studio-code.md)
      (recommended) You can use any plain text editor but for our purposes, Visual
      Studio Code ("VS Code") will be used.'
    potential_slug_fragment: visual-studio-code
    potential_software: Visual Studio Code
    type: install
  projects:
  - annotation: '[Digital Humanities Research Institute](https://www.dhinstitutes.org/):
      Our very own Digital Humanities Research Institute uses HTML, CSS, and other
      languages in its web site. Our web design aims to provide its workshops in a
      visual style that emphasizes accessibility, ease, and comfort.'
    title: Digital Humanities Research Institute
    url: https://www.dhinstitutes.org
  - annotation: '[Colored Conventions](https://coloredconventions.org/): The Colored
      Conventions project is a community-based archive of nineteenth-century Black
      political organization. In its early stage, this project crowdsourced much of
      its data-gathering efforts by building an interface for volunteers to digitally
      transcribe archival texts. This project uses HTML and CSS in many of its aspects.'
    title: Colored Conventions
    url: https://coloredconventions.org
  - annotation: '[Musical Passage](http://www.musicalpassage.org/): Musical Passage
      is an exhibit of early African diasporic music. This website reproduces a transcriptions
      and renditions of songs performed by enslaved African people in the Caribbean
      in the early eighteenth century. This project uses HTML, CSS, and other languages
      to provide a multimodal experience for its visitors, who can see a historical
      document as well as listen to the earliest known record of African diasporic
      music.'
    title: Musical Passage
    url: http://www.musicalpassage.org
  readings:
  - annotation: '["Introduction: Promises and Perils of Digital History"](http://chnm.gmu.edu/digitalhistory/introduction/)'
    title: '"Introduction: Promises and Perils of Digital History"'
    url: http://chnm.gmu.edu/digitalhistory/introduction
  - annotation: '[Digital History: A Guide To Gathering, Preserving, and Presenting
      the Past on the Web](http://chnm.gmu.edu/digitalhistory/) by Daniel J. Cohen
      and Roy Rosenzweig provides clear introduction to what a life-cycle of web-based
      digital humanities project might look like. The book covers a variety of aspects
      of a website project from initial planning, to website design, and even cultivating
      an audience. Participants are welcome to read as much of this free online book
      as suits them. I highly recommend reading the [introduction](http://chnm.gmu.edu/digitalhistory/introduction/)
      which helpfully explains the affordances and difficulties of web-based digital
      projects.'
    title: 'Digital History: A Guide To Gathering, Preserving, and Presenting the
      Past on the Web'
    url: http://chnm.gmu.edu/digitalhistory
lessons:
- challenge: ''
  keywords:
  - CSS
  - HTML
  - Markdown
  - Programming Language
  order: 1
  questions:
  - answers:
      correct:
      - 'True'
      incorrect:
      - 'False'
    question: 'True or False: The primary difference between markup languages and
      programming languages is that markup languages are used to determine the format,
      appearance, and purpose of content, whereas programming languages are used to
      transform data.'
  solution: ''
  text: "<p>Websites seem like these magical things that appear when we open our web\
    \ browser (i.e. Chrome, Firefox, Safari). We know that websites are hypertext,\
    \ meaning that we can click between links, travelling from page to page until\
    \ we find what we need. What may be less obvious about websites is that, fundamentally\
    \ <strong>websites are plain text documents</strong>, usually written in HTML\
    \ or another web-based markup language, such as XML or XHTML.</p>\n<p><em>Fun\
    \ fact</em>: <strong>More than 90% of all websites (whose markup language we know)\
    \ use HTML</strong>\n<a href=\"https://w3techs.com/technologies/details/ml-html/all/all\"\
    \ rel=\"nofollow\" target=\"_blank\">(w3techs.com)</a>.</p>\n<h2>\n<a aria-hidden=\"\
    true\" class=\"anchor\" href=\"#hypertext-markup-language-html\" id=\"user-content-hypertext-markup-language-html\"\
    ><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a>Hypertext\
    \ Markup Language (HTML)</h2>\n<p>HTML is a markup language used to write web-based\
    \ documents. It enables us to provide web browsers with information about the\
    \ <em>content</em> of a document. We can, for example, indicate that some part\
    \ of our document is a paragraph, image, heading, or link. The browser uses this\
    \ information when displaying the document for users.</p>\n<h2>\n<a aria-hidden=\"\
    true\" class=\"anchor\" href=\"#markup-language-vs-programming-language\" id=\"\
    user-content-markup-language-vs-programming-language\"><span aria-hidden=\"true\"\
    \ class=\"octicon octicon-link\"></span></a>Markup Language vs. Programming Language</h2>\n\
    <p>HTML is a <em>markup</em> language, not a programming language. Programming\
    \ languages are used to transform data, by creating scripts that organize an output\
    \ of data based on a particular input of data. A markup language is used to control\
    \ the presentation of data.</p>\n<p>For a practical example of this difference,\
    \ we can think about tables. A programming language can help you search through\
    \ a table, understand the kinds of data the table includes, find particular data\
    \ points, or transform its content into other kinds of data, such as frequencies.\
    \ A markup language would instead determine the content, layout, and visual presentation\
    \ of the table.</p>\n<p>Fundamentally, then, a script or program is a set of instructions\
    \ given to the computer. A document in a markup language determines how information\
    \ is presented to a user.</p>\n<p><strong>NOTE\u2014Markup vs Markdown:</strong>\
    \ Markdown and HTML are both types of markup languages; Markdown is a play on\
    \ words. Markup languages help format content.</p>\n<h2>\n<a aria-hidden=\"true\"\
    \ class=\"anchor\" href=\"#cascading-style-sheets-css\" id=\"user-content-cascading-style-sheets-css\"\
    ><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a>Cascading\
    \ Style Sheets (CSS)</h2>\n<p>CSS is usually used in conjunction with HTML. HTML\
    \ tells the browser what the different parts of a document <em>are</em>. CSS tells\
    \ the browser what the parts of the document should <em>look like</em>. It is\
    \ essentially a set of rules that are applied when rendering an HTML document.\
    \ Its name\u2014Cascading Style Sheets\u2014refers to the fact that there is an\
    \ order of precedence in how the browswer applies CSS rules to a document. More\
    \ specific rules overwrite less specific rules.</p>\n<h2>\n<a aria-hidden=\"true\"\
    \ class=\"anchor\" href=\"#where-does-the-internet-come-in\" id=\"user-content-where-does-the-internet-come-in\"\
    ><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a>Where Does\
    \ the Internet Come In?</h2>\n<p>Together, these languages can be used to write\
    \ and style a website using a text editor (such as Visual Studio Code) directly\
    \ from your computer. No internet access needed.</p>\n<p>However, internet access\
    \ is necessary if you plan on making your website available to the public. At\
    \ the end of this workshop, we will briefly discuss <a href=\"?page=19\">how to\
    \ get your website from your local computer onto the internet</a>.</p>\n<p>In\
    \ our activities during this workshop we will focus on building locally-hosted\
    \ websites. These are websites that you can open on your web browser, however,\
    \ they only exist on your own device and are only accessible to you. Locally-hosted\
    \ websites are not yet on the internet.</p>"
  title: Introduction
  workshop: html-css
- challenge: ''
  keywords: []
  order: 2
  questions: []
  solution: ''
  text: '<p><strong><em>Note</em>: please use Firefox or Chrome. Safari will not allow
    you to complete this activity.</strong></p>

    <ol>

    <li>Open a web browser, preferably <a href="/installations/firefox-windows/">Firefox</a>.</li>

    <li>Go to any website. The example below is from <a href="http://paramajmera.github.io/"
    rel="nofollow" target="_blank">paramajmera.github.io</a>.</li>

    <li>Open the secondary menu (using a mouse, this would be the menu that opens
    when you right click on the page; on Mac computers, this is usually a two-finger
    tap on the track pad, or you can press the <kbd>control</kbd> button then click
    the track pad).</li>

    <li>Select <code>View Page Source</code> from the dropdown menu.</li>

    </ol>

    <p><a href="/static/website/images/lessons/html-css/capture.png" rel="noopener
    noreferrer" target="_blank"><img alt="Image showing dropdown menu that appears
    when right clicking on a website in Chrome or Firefox" class="img-fluid d-block
    my-4" src="/static/website/images/lessons/html-css/capture.png" style="max-width:100%;"/></a></p>

    <h2>

    <a aria-hidden="true" class="anchor" href="#what-you-are-seeing" id="user-content-what-you-are-seeing"><span
    aria-hidden="true" class="octicon octicon-link"></span></a>What You Are Seeing</h2>

    <p>A second tab should open in your browser displaying the underlying code of
    the page. This is the code that is used to make and render the page in your web
    browser.</p>

    <p><a href="/static/website/images/lessons/html-css/capture_pageSource.png" rel="noopener
    noreferrer" target="_blank"><img alt="Image showing the page source information
    and underlying HTML code of a webpage" class="img-fluid d-block my-4" src="/static/website/images/lessons/html-css/capture_pageSource.png"
    style="max-width:100%;"/></a></p>

    <p>In this workshop, we are going to learn how to read and write this code, and
    render it in the browser on your local computer. At the end we will discuss the
    next steps for how you could host your new website, making it available for browsing
    by others via the internet.</p>'
  title: Opening Activity
  workshop: html-css
- challenge: '<p>Create a folder called <code>htmlpractice</code> in your projects
    folder (<code>~/Desktop/projects/htmlpractice</code>). Inside that folder, create
    a new text file and save it as <code>index.html</code>.</p>

    <p>Let''s use the command line to create the new folder and file:</p>

    <ol>

    <li>

    <p>Open your terminal.</p>

    </li>

    <li>

    <p>Navigate to your projects folder using this command:</p>

    <div class="highlight highlight-text-shell-session"><pre>$ <span class="pl-s1"><span
    class="pl-c1">cd</span> <span class="pl-k">~</span>/Desktop/projects</span></pre></div>

    </li>

    <li>

    <p>Create a new folder:</p>

    <div class="highlight highlight-text-shell-session"><pre>$ <span class="pl-s1">mkdir
    htmlpractice</span></pre></div>

    </li>

    <li>

    <p>Use your Visual Studio Code text editor to create a file called <code>index.html</code>:
    <code>code index.html</code>.</p>

    </li>

    <li>

    <p>Paste the template above (starting with <code>&lt;!DOCTYPE html&gt;</code>)
    into the new file.</p>

    </li>

    </ol>

    <p>The <code>index.html</code> file is your default homepage for the website we
    are creating. This is an industry standard, because web browsers tend to recognize
    the <code>index.html</code> page as the opening page to the directory that is
    your website. See <a href="https://www.lifewire.com/index-html-page-3466505" rel="nofollow">here</a>
    for more explanation.</p>

    <p>Once you''ve created your new file, open it with a web browser using your graphical
    user interface:</p>

    <p>On macOS, click on the Finder in your dock (the apps at the bottom of the screen)
    and click on Desktop on the left. From there, navigate to <code>projects</code>,
    then <code>htmlpractice</code>. Alternately, you can click the projects folder
    icon on your Desktop and find it from there. If you''re using a Mac and would
    prefer to use the command line, you can also type <code>open index.html</code>
    from within your <code>htmlpractice</code> folder.</p>

    <p>On Windows, click the <code>projects</code> folder icon on your desktop. Navigate
    to <code>projects</code>, then <code>htmlpractice</code>. Double click the <code>index.html</code>
    file. If it does not open in a browser, right click the <code>index.html</code>
    icon and select "Open with..." from the menu. Select Firefox or Google Chrome
    from the app list that appears.</p>'
  keywords:
  - Root Element
  order: 3
  questions:
  - answers:
      correct:
      - <code>&lt;html lang="en"&gt;</code>
      incorrect:
      - <code>&lt;!DOCTYPE html&gt;</code>
    question: Which of these two HTML commands is also known as the "root element"?
  solution: ''
  text: "<p>Below is a basic template for an empty HTML Document.</p>\n<div class=\"\
    highlight highlight-text-html-basic\"><pre><span class=\"pl-c1\">&lt;!DOCTYPE\
    \ html<span class=\"pl-kos\">&gt;</span></span>\n<span class=\"pl-kos\">&lt;</span><span\
    \ class=\"pl-ent\">html</span> <span class=\"pl-c1\">lang</span>=\"<span class=\"\
    pl-s\">en</span>\"<span class=\"pl-kos\">&gt;</span>\n\_\_\_\_<span class=\"pl-kos\"\
    >&lt;</span><span class=\"pl-ent\">head</span><span class=\"pl-kos\">&gt;</span>\n\
    \_\_\_\_\_\_\_\_...\n\_\_\_\_<span class=\"pl-kos\">&lt;/</span><span class=\"\
    pl-ent\">head</span><span class=\"pl-kos\">&gt;</span>\n\_\_\_\_<span class=\"\
    pl-kos\">&lt;</span><span class=\"pl-ent\">body</span><span class=\"pl-kos\">&gt;</span>\n\
    \_\_\_\_\_\_\_\_...\n\_\_\_\_<span class=\"pl-kos\">&lt;/</span><span class=\"\
    pl-ent\">body</span><span class=\"pl-kos\">&gt;</span>\n<span class=\"pl-kos\"\
    >&lt;/</span><span class=\"pl-ent\">html</span><span class=\"pl-kos\">&gt;</span></pre></div>\n\
    <p>HTML documents start with a <code>DOCTYPE</code> declaration that states what\
    \ version of HTML is being used. This tells the browser how to read the code below\
    \ it to render the page. If the webpage were written with a different markup language\
    \ (i.e. XML, XHTML), it would tell you here.</p>\n<p>After the <code>DOCTYPE</code>,\
    \ we see the start of the <strong>Root Element</strong>. EVERYTHING\u2014all content\u2014\
    that you want presented on this page and all information about how you want that\
    \ information to be organized and styled goes in the root element, and it is demarcated\
    \ by <code>&lt;html&gt;</code> and <code>&lt;/html&gt;</code>.</p>\n<p>The root\
    \ element begins by indicating which language the document is written in; and\
    \ in this basic template, <code>en</code> tells us and the computer that we are\
    \ writing in English.</p>\n<p>Within the root element of the basic template above,\
    \ you'll notice the two main sections of all HTML documents: a head section (demarcated\
    \ by <code>&lt;head&gt;</code> and <code>&lt;/head&gt;</code>) and a body section\
    \ (demarcated by <code>&lt;body&gt;</code> and <code>&lt;/body&gt;</code>).</p>\n\
    <p>The <strong>head section</strong> contains basic information about the file\
    \ such as the title, keywords, authors, a short description, and so on. This is\
    \ also where you will link to your CSS stylesheet which describes how you want\
    \ the page styled\u2014colors, fonts, size of text, and positioning of elements\
    \ on the page.</p>\n<p>The <strong>body section</strong> contains the content\
    \ of the page, including paragraphs, images, links, and more, and indicates how\
    \ this content is to be structured on the page.</p>\n<h2>\n<a aria-hidden=\"true\"\
    \ class=\"anchor\" href=\"#what-happens\" id=\"user-content-what-happens\"><span\
    \ aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a>What Happens?</h2>\n\
    <p>When you open the empty template, you'll see only a blank web page. Open your\
    \ secondary menu (right click on Windows, hold <kbd>control</kbd> and click with\
    \ macOS) and view the page source.</p>\n<h2>\n<a aria-hidden=\"true\" class=\"\
    anchor\" href=\"#what-should-happen-when-i-open-each-of-my-two-new-files\" id=\"\
    user-content-what-should-happen-when-i-open-each-of-my-two-new-files\"><span aria-hidden=\"\
    true\" class=\"octicon octicon-link\"></span></a>What Should Happen When I Open\
    \ Each of my Two New Files?</h2>\n<p>When you \"View Page Source,\" you should\
    \ see the code for the basic template.</p>\n<p>No content renders on the page,\
    \ because there is no content in the template at this time.</p>"
  title: Basic Template for HTML
  workshop: html-css
- challenge: ''
  keywords:
  - Tag
  - Elements
  order: 4
  questions:
  - answers:
      correct:
      - Elements have opening and closing tags.
      incorrect:
      - Tags have opening and closing elements.
    question: 'Which of the following statements is correct:'
  solution: ''
  text: "<p>Tags and elements are the structuring components of html webpages.</p>\n\
    <p><strong>Elements</strong> identify the different parts of a page, such as paragraphs,\
    \ headings, titles, body text, images and more. Elements are demarcated by tags\
    \ which enclose the content of an element (ex. <code>&lt;head&gt;</code> and <code>&lt;/head&gt;</code>\
    \ are tags that denote the head element of your page).</p>\n<p><strong>Tags</strong>\
    \ demarcate elements in one of two ways. As with the paragraph element below,\
    \ an element can have an opening and a closing tag, with the content in between.</p>\n\
    <div class=\"highlight highlight-text-html-basic\"><pre><span class=\"pl-kos\"\
    >&lt;</span><span class=\"pl-ent\">p</span><span class=\"pl-kos\">&gt;</span>This\
    \ is a paragraph.<span class=\"pl-kos\">&lt;/</span><span class=\"pl-ent\">p</span><span\
    \ class=\"pl-kos\">&gt;</span>\n<span class=\"pl-kos\">&lt;</span><span class=\"\
    pl-ent\">p</span><span class=\"pl-kos\">&gt;</span>\n\_\_\_\_This is also a paragraph.\n\
    <span class=\"pl-kos\">&lt;/</span><span class=\"pl-ent\">p</span><span class=\"\
    pl-kos\">&gt;</span></pre></div>\n<p>Elements which have an opening and closing\
    \ tag can have other elements inside them. Inside the paragraph element below\
    \ is a <code>&lt;strong&gt;</code> element, which emphasizes the included text\
    \ by making it bold.</p>\n<div class=\"highlight highlight-text-html-basic\"><pre><span\
    \ class=\"pl-kos\">&lt;</span><span class=\"pl-ent\">p</span><span class=\"pl-kos\"\
    >&gt;</span>\n\_\_\_\_When I came home from school, I saw he had <span class=\"\
    pl-kos\">&lt;</span><span class=\"pl-ent\">strong</span><span class=\"pl-kos\"\
    >&gt;</span>stolen<span class=\"pl-kos\">&lt;/</span><span class=\"pl-ent\">strong</span><span\
    \ class=\"pl-kos\">&gt;</span> my chocolate pudding.\n<span class=\"pl-kos\">&lt;/</span><span\
    \ class=\"pl-ent\">p</span><span class=\"pl-kos\">&gt;</span></pre></div>\n<p>Other\
    \ elements have self-closing tags as with the <code>&lt;img&gt;</code> (image)\
    \ element below. These tags are also called <strong>void tags</strong>.</p>\n\
    <div class=\"highlight highlight-text-html-basic\"><pre><span class=\"pl-kos\"\
    >&lt;</span><span class=\"pl-ent\">img</span> <span class=\"pl-c1\">src</span>=\"\
    <span class=\"pl-s\">image.jpeg</span>\" /&gt;</pre></div>\n<p>These elements\
    \ don't require a separate closing tag. Closing tags aren't needed because you\
    \ wouldn't add content inside these elements. For example, it doesn't make sense\
    \ to add any additional content inside an image. It is common practice to end\
    \ void tags like the one above with a <code>/</code> to mark the end of it.</p>\n\
    <p>Below is HTML that adds alternative text to an image\u2014or text that describes\
    \ the image. This information added is an attribute\u2014or something that modifies\
    \ the default functionality of an element.</p>\n<div class=\"highlight highlight-text-html-basic\"\
    ><pre><span class=\"pl-kos\">&lt;</span><span class=\"pl-ent\">img</span> <span\
    \ class=\"pl-c1\">alt</span>=\"<span class=\"pl-s\">This is an image</span>\"\
    \ <span class=\"pl-c1\">src</span>=\"<span class=\"pl-s\">image.jpeg</span>\"\
    \ /&gt;</pre></div>\n<p>Adding alternative text to an image, as was done in this\
    \ example, is vitally important. That information makes the image more accessible\
    \ to those viewing your site. For instance, users with poor vision who may not\
    \ be able to see your image will still understand what it is and why it's there\
    \ if you provide alternative text describing it.</p>\n<p>If you look back at the\
    \ basic template in your <code>index.html</code> file, you'll see that the main\
    \ sections of your file have opening and closing tags. Each of these main elements\
    \ will eventually hold many other elements, many of which will be the content\
    \ of our website.</p>"
  title: Tags and Elements
  workshop: html-css
- challenge: '<p>Using your text editor, add the following to your <code>index.html</code>:</p>

    <ul>

    <li>Title</li>

    <li>Heading</li>

    <li>Paragraph</li>

    </ul>

    <p>Then, re-save the file. Open it in your browser again or refresh the page if
    still opened.</p>

    <p>What do you notice about how the information is organized in the webpage? In
    other words, where are the title, heading, and paragraph text?</p>'
  keywords: []
  order: 5
  questions:
  - answers:
      correct:
      - <code>&lt;h2&gt;</code>
      incorrect:
      - <code>&lt;head&gt;</code>
    question: If I wanted to indicate that "About" is a subheading in my page, which
      element should I use?
  solution: ''
  text: "<p>Paragraphs and headings are the main textual elements of the body of your\
    \ webpages. Because these contain content that you want to organize and display\
    \ on your webpage, these are entered in the body element.</p>\n<p>The <code>&lt;h1&gt;</code>,\
    \ <code>&lt;h2&gt;</code>, <code>&lt;h3&gt;</code>, etc. tags denote <strong>headings</strong>\
    \ and <strong>subheadings</strong>, with <code>&lt;h1&gt;</code> being the largest\
    \ and <code>&lt;h6&gt;</code> the smallest.</p>\n<p>The <code>&lt;p&gt;</code>\
    \ tags denote <strong>paragraphs</strong>, or blocks of text.</p>\n<div class=\"\
    highlight highlight-text-html-basic\"><pre><span class=\"pl-c1\">&lt;!DOCTYPE\
    \ html<span class=\"pl-kos\">&gt;</span></span>\n\_\_\_\_<span class=\"pl-kos\"\
    >&lt;</span><span class=\"pl-ent\">html</span> <span class=\"pl-c1\">lang</span>=\"\
    <span class=\"pl-s\">en</span>\"<span class=\"pl-kos\">&gt;</span>\n\_\_\_\_<span\
    \ class=\"pl-kos\">&lt;</span><span class=\"pl-ent\">head</span><span class=\"\
    pl-kos\">&gt;</span>\n\_\_\_\_\_\_\_\_<span class=\"pl-kos\">&lt;</span><span\
    \ class=\"pl-ent\">title</span><span class=\"pl-kos\">&gt;</span>A boring story<span\
    \ class=\"pl-kos\">&lt;/</span><span class=\"pl-ent\">title</span><span class=\"\
    pl-kos\">&gt;</span>\n\_\_\_\_<span class=\"pl-kos\">&lt;/</span><span class=\"\
    pl-ent\">head</span><span class=\"pl-kos\">&gt;</span>\n\_\_\_\_<span class=\"\
    pl-kos\">&lt;</span><span class=\"pl-ent\">body</span><span class=\"pl-kos\">&gt;</span>\n\
    \_\_\_\_\_\_\_\_<span class=\"pl-kos\">&lt;</span><span class=\"pl-ent\">h1</span><span\
    \ class=\"pl-kos\">&gt;</span>\n\_\_\_\_\_\_\_\_\_\_\_\_Cleaning my boiler\n\_\
    \_\_\_\_\_\_\_<span class=\"pl-kos\">&lt;/</span><span class=\"pl-ent\">h1</span><span\
    \ class=\"pl-kos\">&gt;</span>\n\_\_\_\_\_\_\_\_<span class=\"pl-kos\">&lt;</span><span\
    \ class=\"pl-ent\">p</span><span class=\"pl-kos\">&gt;</span>\n\_\_\_\_\_\_\_\_\
    \_\_\_\_When I got to my basement that day, I knew that I just had to clean my\
    \ boiler. It was just too dirty. Honestly, it was getting to be a hazard. So I\
    \ got my wire brush and put on my most durable pair of boiler-cleaning overalls.\
    \ It was going to be a long day.\n\_\_\_\_\_\_\_\_<span class=\"pl-kos\">&lt;/</span><span\
    \ class=\"pl-ent\">p</span><span class=\"pl-kos\">&gt;</span>\n\_\_\_\_<span class=\"\
    pl-kos\">&lt;/</span><span class=\"pl-ent\">body</span><span class=\"pl-kos\"\
    >&gt;</span>\n<span class=\"pl-kos\">&lt;/</span><span class=\"pl-ent\">html</span><span\
    \ class=\"pl-kos\">&gt;</span></pre></div>\n<p>Note that the <code>&lt;title&gt;</code>\
    \ is in the <code>&lt;head&gt;</code> element, which is where information about\
    \ the webpage goes. The title doesn't appear on the page, but instead elsewhere\
    \ in the browser when the page is displayed. For example, in Chrome, the title\
    \ appears on the tab above the navbar.</p>\n<p><a href=\"/static/website/images/lessons/html-css/title.png\"\
    \ rel=\"noopener noreferrer\" target=\"_blank\"><img alt=\"Image showing where\
    \ the title appears in the Chrome web browser\" class=\"img-fluid d-block my-4\"\
    \ src=\"/static/website/images/lessons/html-css/title.png\" style=\"max-width:100%;\"\
    /></a></p>\n<p>Note also that the elements and tags used in HTML have <em>meaning</em>.\
    \ They provide information about the structure of a web page, showing how its\
    \ parts work together. Those who make use of assistive technologies such as screen\
    \ readers rely on this semantic information to navigate the page. Thus, it's important\
    \ to use elements such as headers only when the information being marked calls\
    \ for it. Making text large and/or bold for visual effect should be done using\
    \ CSS. The Mozilla Developer Network has some good <a href=\"https://developer.mozilla.org/en-US/docs/Glossary/Semantics#Semantics_in_HTML\"\
    \ rel=\"nofollow\" target=\"_blank\">introductory information on semantic HTML</a>.</p>\n\
    <h2>\n<a aria-hidden=\"true\" class=\"anchor\" href=\"#what-should-you-see\" id=\"\
    user-content-what-should-you-see\"><span aria-hidden=\"true\" class=\"octicon\
    \ octicon-link\"></span></a>What Should You See?</h2>\n<p>The heading should appear\
    \ at the top of the page, followed by the paragraph text. The heading text should\
    \ be larger. The title should appear in the browser window tab.</p>\n<p><a href=\"\
    /static/website/images/lessons/html-css/boiler-example.png\" rel=\"noopener noreferrer\"\
    \ target=\"_blank\"><img alt=\"Image of the boiler example above rendered in Google\
    \ Chrome\" class=\"img-fluid d-block my-4\" src=\"/static/website/images/lessons/html-css/boiler-example.png\"\
    \ style=\"max-width:100%;\"/></a></p>"
  title: Paragraphs and Headings
  workshop: html-css
- challenge: '<ol>

    <li>Create a new text file called <code>about.html</code> in your <code>htmlpractice</code>
    folder. Copy over the HTML from your <code>index.html</code> file, but change
    the text in the <code>&lt;h1&gt;</code> element to "About."</li>

    <li>In your <code>index.html</code> file, add a relative link leading to your
    "About" page.</li>

    <li>Also add a relative link from your "About" page to your <code>index.html</code>
    page. In this link, call your <code>index.html</code> page "Home" (Reminder: <code>index.html</code>
    is the default homepage)</li>

    <li>Lastly, include an absolute link to a page of your choosing. Remember that
    an absolute link includes the protocol (for example, <code>http:</code>) and also
    a domain (for example, <code>cuny.edu</code>), such as <code>http://cuny.edu/about</code>.</li>

    <li>Re-save your text files and reopen or refresh them in your browser.</li>

    </ol>'
  keywords:
  - Attributes
  order: 6
  questions:
  - answers:
      correct:
      - <code>&lt;a href="digitalProject.html"&gt;Digital Project&lt;/a&gt;</code>
      incorrect:
      - <code>&lt;a href="https://www.nytimes.com/"&gt;The New York Times&lt;/a&gt;</code>
    question: Which of the following options is a relative link?
  solution: ''
  text: "<p>Links are the foundation of the World Wide Web, and thus are an important\
    \ component of most websites. Hyperlinking text enables users to move between\
    \ the different webpages on your site (sometimes in the form of a menu or navigation\
    \ bar), or connect to other resources or information on other websites.</p>\n\
    <p>The <code>&lt;a&gt;</code> tag, or <strong>anchor tag</strong>, creates a link\
    \ to another document. You can use the <code>&lt;a&gt;</code> tag to link to other\
    \ documents or webpages you created for the same site or to documents located\
    \ elsewhere on the web. You can also use it to link to a particular location on\
    \ a page\u2014we'll see an example of this in the section on Classes and IDs.</p>\n\
    <h2>\n<a aria-hidden=\"true\" class=\"anchor\" href=\"#option-one-relative-links\"\
    \ id=\"user-content-option-one-relative-links\"><span aria-hidden=\"true\" class=\"\
    octicon octicon-link\"></span></a>Option One: Relative Links</h2>\n<p>Relative\
    \ links take the current page as an origin point and search for other files within\
    \ the same folder or directory. This method is useful for creating links to pages\
    \ within your own site.</p>\n<p>The following appears as a link to the <code>about.html</code>\
    \ page in the same folder as <code>index.html</code>:</p>\n<div class=\"highlight\
    \ highlight-text-html-basic\"><pre><span class=\"pl-kos\">&lt;</span><span class=\"\
    pl-ent\">a</span> <span class=\"pl-c1\">href</span>=\"<span class=\"pl-s\">about.html</span>\"\
    <span class=\"pl-kos\">&gt;</span>About<span class=\"pl-kos\">&lt;/</span><span\
    \ class=\"pl-ent\">a</span><span class=\"pl-kos\">&gt;</span></pre></div>\n<p>On\
    \ your webpage it will appear as:</p>\n<blockquote>\n<p><a href=\"#\">About</a></p>\n\
    </blockquote>\n<p>This link is asking the browser to look for a file titled <code>about.html</code>\
    \ in the same folder. If a file named <code>about.html</code> is not in the same\
    \ folder, clicking the link will result in a <code>404</code> (\"Page Not Found\"\
    ) error.</p>\n<h2>\n<a aria-hidden=\"true\" class=\"anchor\" href=\"#option-two-absolute-links\"\
    \ id=\"user-content-option-two-absolute-links\"><span aria-hidden=\"true\" class=\"\
    octicon octicon-link\"></span></a>Option Two: Absolute Links</h2>\n<p>An absolute\
    \ link includes information that allows the browser to find resources on other\
    \ websites. This information includes the site domain\u2014such as <code>google.com</code>\u2014\
    and often the protocol\u2014such as <code>http</code> or <code>https</code>.</p>\n\
    <div class=\"highlight highlight-text-html-basic\"><pre><span class=\"pl-kos\"\
    >&lt;</span><span class=\"pl-ent\">a</span> <span class=\"pl-c1\">href</span>=\"\
    <span class=\"pl-s\">http://www.google.com</span>\"<span class=\"pl-kos\">&gt;</span>Google<span\
    \ class=\"pl-kos\">&lt;/</span><span class=\"pl-ent\">a</span><span class=\"pl-kos\"\
    >&gt;</span></pre></div>\n<p>On your webpage it will appear as:</p>\n<blockquote>\n\
    <p><a href=\"http://www.google.com\" rel=\"nofollow\" target=\"_blank\">Google</a></p>\n\
    </blockquote>\n<p>This pathway is directing your browser to look online for this\
    \ text document at the URL address provided.</p>\n<h2>\n<a aria-hidden=\"true\"\
    \ class=\"anchor\" href=\"#more-on-links\" id=\"user-content-more-on-links\"><span\
    \ aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a>More on Links</h2>\n\
    <p>Each example above includes an <code>href</code>\u2014a hypertext reference\u2014\
    which is an example of an <strong>attribute</strong>. Attributes offer secondary\
    \ information about an element.</p>\n<p>The <code>&lt;a&gt;</code> tag, or anchor\
    \ tag, creates a link. The text within the <code>&lt;a&gt;</code> and <code>&lt;/a&gt;</code>\
    \ tags, the anchor text, is what a visitor to the site will see and can click\
    \ on. The <code>href=</code> attribute tells the browser where the user should\
    \ be directed when they click the link.</p>\n<p>There is another technical difference\
    \ between the two options above.</p>\n<h2>\n<a aria-hidden=\"true\" class=\"anchor\"\
    \ href=\"#relative-vs-absolute-links-when-to-use-which-one\" id=\"user-content-relative-vs-absolute-links-when-to-use-which-one\"\
    ><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a>Relative\
    \ vs. Absolute Links: When to Use Which One</h2>\n<p>Use relative links when referring\
    \ to pages on your own site. The main advantage of using relative links to pages\
    \ on your site is that your site will not break if it is moved to a different\
    \ folder or environment.</p>\n<h2>\n<a aria-hidden=\"true\" class=\"anchor\" href=\"\
    #check-if-it-worked\" id=\"user-content-check-if-it-worked\"><span aria-hidden=\"\
    true\" class=\"octicon octicon-link\"></span></a>Check If It Worked</h2>\n<p>When\
    \ your pages are updated, you should be able to navigate from your \"Home\" page\
    \ to your \"About\" page, and vice versa. You should also be able to navigate\
    \ to the external web page.</p>"
  title: Links
  workshop: html-css
- challenge: '<p>Download and save an image from the web, or move an image from your
    computer into the same folder as your <code>index.html</code> file.</p>

    <p>Tip: Give the file a simple name. Also, the name <strong>cannot</strong> have
    spaces. A good practice is to use either dashes or underscores where there would
    otherwise be spaces. For example: <code>this-is-an-image.jpg</code> or <code>this_is_an_image.jpg</code>.</p>

    <p>Using the code above as a reference, add that image into your <code>index.html</code>
    file, re-save the file, and re-open or refresh the page in your browser. Your
    image should now appear on the page.</p>'
  keywords: []
  order: 7
  questions:
  - answers:
      correct:
      - 'True'
      incorrect:
      - 'False'
    question: 'True or False: Does including "alt text" in websites improve their
      accessibility?'
  solution: ''
  text: '<p>Images are another important component of websites. Sometimes these just
    help bring your website to life, but other times they can help communicate information
    to users.</p>

    <p>Images are created with the <code>&lt;img&gt;</code> tag. Similar to the <code>&lt;a&gt;</code>
    tag, <code>&lt;img&gt;</code> requires an attribute, in this case <code>src</code>.
    The <code>src</code> attribute stands for "source" and communicates secondary
    information to your browser that identifies and locates the image. Unlike many
    other tags, the <code>&lt;img&gt;</code> tag does not need to be closed, making
    it an example of a void tag.</p>

    <p>The following element pulls in an image located in the same folder as the <code>.html</code>
    file:</p>

    <div class="highlight highlight-text-html-basic"><pre><span class="pl-kos">&lt;</span><span
    class="pl-ent">img</span> <span class="pl-c1">src</span>="<span class="pl-s">scream.jpeg</span>"
    /&gt;</pre></div>

    <p>The same rules apply here as with the <code>href</code> attribute: if the image
    is not located in the same folder as the document you are writing in, the browser
    won''t find it. If the browser cannot find an image resource, you will see a broken
    image icon, such as this one from Chrome:</p>

    <p><a href="/static/website/images/lessons/html-css/broken.png" rel="noopener
    noreferrer" target="_blank"><img alt="Chrome broken image icon" class="img-fluid
    d-block my-4" src="/static/website/images/lessons/html-css/broken.png" style="max-width:100%;"/></a></p>

    <p>Note: Some sites use a lot of images. When this is the case, it can be helpful
    to keep images in a separate folder within your site''s structure. To enable the
    browser to find an image in that case, just add the directory in front of the
    file name. For example, if you have a folder named images in the same folder as
    your index.html file, and scream.jpeg is in that folder, you''d change the void
    tag above to <code>&lt;img src="images/scream.jpeg" /&gt;</code>.</p>

    <h2>

    <a aria-hidden="true" class="anchor" href="#making-images-accessible" id="user-content-making-images-accessible"><span
    aria-hidden="true" class="octicon octicon-link"></span></a>Making Images Accessible</h2>

    <p>As briefly noted earlier, alternative text, or alt text, is descriptive "text
    associated with an image that serves the same purpose and conveys the same essential
    information as the image" (see <a href="https://en.wikipedia.org/wiki/Wikipedia:Manual_of_Style/Accessibility/Alternative_text_for_images"
    rel="nofollow" target="_blank">Wikipedia Manual of Style/Accessibility/Alternative
    Text for Images</a> for more), and is important for ensuring content conveyed
    by images is accessible to all.</p>

    <p>To add alternative text to an image, you add an additional attribute, <code>alt</code>
    followed by your descriptive text. For example:</p>

    <div class="highlight highlight-text-html-basic"><pre><span class="pl-kos">&lt;</span><span
    class="pl-ent">img</span> <span class="pl-c1">src</span>="<span class="pl-s">filename.png</span>"
    <span class="pl-c1">alt</span>="<span class="pl-s">Text in these quotes describes
    the image</span>" /&gt;</pre></div>

    <p>For more information about using alt text, see what the <a href="https://www.ssa.gov/accessibility/files/SSA_Alternative_Text_Guide.pdf"
    rel="nofollow" target="_blank">Social Security Administration</a> has to say.</p>

    <h2>

    <a aria-hidden="true" class="anchor" href="#what-images-may-i-use-on-my-site"
    id="user-content-what-images-may-i-use-on-my-site"><span aria-hidden="true" class="octicon
    octicon-link"></span></a>What Images May I Use On My Site?</h2>

    <p>If you''re planning to use images that you did not take or make yourself, you''ll
    need to use "public domain" or "open license" images.</p>

    <p>This <a href="https://openlab.citytech.cuny.edu/blog/help/following-copyright-guidelines-for-images/"
    rel="nofollow" target="_blank">guide by the OpenLab at City Tech</a> includes
    more information on licensure and a list of places where you can find reuseable
    images.</p>'
  title: Images
  workshop: html-css
- challenge: ''
  keywords: []
  order: 8
  questions: []
  solution: ''
  text: "<p>As we\u2019ve gone through the different components of creating a webpage,\
    \ you likely have noticed some common conventions or industry standards for creating\
    \ a webpage using HTML. Can you guess any of these?</p>\n<p>Here are a few examples:</p>\n\
    <ul>\n<li>Some tags are self-closing, while others require a closing tag. Self-closing\
    \ tags are called void tags, and are generally self-closing because you wouldn't\
    \ need or want to add another element within a tag. They also generally end with\
    \ a forward slash (<code>/</code>) to mark the end of the tag.</li>\n<li>Use lower\
    \ case. While HTML is not case sensitive, it makes scanning the code easier, and\
    \ makes it look more consistent.</li>\n<li>Your code should be nested. This is\
    \ not a technical necessity either\u2014blank space has no meaning in html. However,\
    \ this makes it easier to scan the code quickly, which is particularly helpful\
    \ when you run into errors!</li>\n</ul>"
  title: Conventions
  workshop: html-css
- challenge: '<p>Here is a more advanced challenge if you''re up for it: Add a table
    containing a schedule of events to your Institute website. You can learn more
    about making tables using HTML <a href="https://www.w3schools.com/html/html_tables.asp"
    rel="nofollow">here</a>.</p>'
  keywords: []
  order: 9
  questions: []
  solution: ''
  text: "<p>In this challenge, we will begin creating an introductory page for your\
    \ a Digital Humanities Institute in your home institution. Using the tags we've\
    \ just reviewed, and two additional ones (see below), we will make a barebones\
    \ website that provides information about a Digital Humanities Instutite that\
    \ you might organize.</p>\n<p>The first step is to create a new folder called\
    \ <code>website</code> in your <code>projects</code> folder on your desktop. Create\
    \ an <code>index.html</code> as well as an <code>about.html</code> file inside\
    \ that folder. These will be the landing page of your site, and a supplemental\
    \ page that provides information about your Digital Humanities Institute's organizers.</p>\n\
    <p>Add HTML to your <code>index.html</code> file. This page should include the\
    \ following:</p>\n<ul>\n<li>Doctype</li>\n<li>Root element</li>\n<li>Head and\
    \ a body</li>\n<li>Title for the page</li>\n<li>One heading</li>\n<li>One paragraph</li>\n\
    <li>One image with alt text</li>\n<li>A menu or navigation bar that links to your\
    \ Home and About pages</li>\n</ul>\n<p>Think about the order of your content as\
    \ you assemble the body of your page. Feel free to make up workshops or borrow\
    \ language from our <a href=\"https://www.dhinstitutes.org/\" rel=\"nofollow\"\
    \ target=\"_blank\">Digital Humanities Institute</a> website.</p>\n<p>Don't worry\
    \ about getting the content just right. The important aspect of this exercise\
    \ is to review the structure of a webpage, and practice creating a webpage.</p>\n\
    <h2>\n<a aria-hidden=\"true\" class=\"anchor\" href=\"#additional-tags\" id=\"\
    user-content-additional-tags\"><span aria-hidden=\"true\" class=\"octicon octicon-link\"\
    ></span></a>Additional Tags</h2>\n<p>Here are two additional tags that might come\
    \ in handy in assembling your page:</p>\n<p>To <strong>make a list</strong>, you\
    \ open and close it with the <code>&lt;ul&gt;</code> tags, and each item is an\
    \ enclosed <code>&lt;li&gt;</code> tag:</p>\n<div class=\"highlight highlight-text-html-basic\"\
    ><pre><span class=\"pl-kos\">&lt;</span><span class=\"pl-ent\">ul</span><span\
    \ class=\"pl-kos\">&gt;</span>\n\_\_\_\_<span class=\"pl-kos\">&lt;</span><span\
    \ class=\"pl-ent\">li</span><span class=\"pl-kos\">&gt;</span>Item 1<span class=\"\
    pl-kos\">&lt;/</span><span class=\"pl-ent\">li</span><span class=\"pl-kos\">&gt;</span>\n\
    \_\_\_\_<span class=\"pl-kos\">&lt;</span><span class=\"pl-ent\">li</span><span\
    \ class=\"pl-kos\">&gt;</span>Item 2<span class=\"pl-kos\">&lt;/</span><span class=\"\
    pl-ent\">li</span><span class=\"pl-kos\">&gt;</span>\n\_\_\_\_<span class=\"pl-kos\"\
    >&lt;</span><span class=\"pl-ent\">li</span><span class=\"pl-kos\">&gt;</span>Item\
    \ 3<span class=\"pl-kos\">&lt;/</span><span class=\"pl-ent\">li</span><span class=\"\
    pl-kos\">&gt;</span>\n<span class=\"pl-kos\">&lt;/</span><span class=\"pl-ent\"\
    >ul</span><span class=\"pl-kos\">&gt;</span></pre></div>\n<p>The HTML above will\
    \ produce an unordered (bulleted) list. To create an ordered (numbered) list instead,\
    \ just substitute <code>&lt;ol&gt;</code> and <code>&lt;/ol&gt;</code> for <code>&lt;ul&gt;</code>\
    \ and <code>&lt;/ul&gt;</code>.</p>\n<p>(This may come in handy when making your\
    \ menu or navigation bar.)</p>\n<p>To <strong>make a line break</strong> or give\
    \ space between different elements:</p>\n<div class=\"highlight highlight-text-html-basic\"\
    ><pre><span class=\"pl-kos\">&lt;</span><span class=\"pl-ent\">br</span> /&gt;</pre></div>"
  title: 'Challenge: Create an Institute Website'
  workshop: html-css
- challenge: ''
  keywords: []
  order: 10
  questions:
  - answers:
      correct:
      - Markup Language
      incorrect:
      - Programming Language
    question: Is CSS a markup language or a programming language?
  solution: ''
  text: '<p>CSS stands for Cascading Style Sheets. This language works in coordination
    with HTML, but is its own language with its own rules and terminology. In contrast
    to HTML, which is responsible for the content of the page, CSS is responsible
    for the presentation of the page.</p>

    <p>Examples of what CSS can help you determine include:</p>

    <ul>

    <li>What background color you want to use for the page or a paragraph.</li>

    <li>What font or font size you want for your headings or your normal text.</li>

    <li>How large you want the images, and whether you want them aligned center, left,
    or right.</li>

    <li>Where elements appear on the page.</li>

    <li>Whether elements are visible to a user or not.</li>

    </ul>'
  title: CSS Basics
  workshop: html-css
- challenge: '<p>Create a blank stylesheet using the command line (following option
    3, external styling, described above). In your <code>index.html</code> document,
    link to your style sheet and re-save the file.</p>

    <p>To link your stylesheet with your <code>index.html</code> file, insert the
    following code into the head element of that <code>index.html</code> file:</p>

    <div class="highlight highlight-text-html-basic"><pre><span class="pl-kos">&lt;</span><span
    class="pl-ent">link</span> <span class="pl-c1">rel</span>="<span class="pl-s">stylesheet</span>"
    <span class="pl-c1">href</span>="<span class="pl-s">style.css</span>" /&gt;</pre></div>'
  keywords: []
  order: 11
  questions:
  - answers:
      correct: []
      incorrect: []
    question: 'Is the following code-snippet an example of inline styling or internal
      styling?

      <div class="highlight highlight-text-html-basic"><pre><span class="pl-c1">&lt;!DOCTYPE
      html<span class="pl-kos">&gt;</span></span>

      <span class="pl-kos">&lt;</span><span class="pl-ent">html</span> <span class="pl-c1">lang</span>="<span
      class="pl-s">en</span>"<span class="pl-kos">&gt;</span>

      &nbsp;&nbsp;&nbsp;&nbsp;<span class="pl-kos">&lt;</span><span class="pl-ent">head</span><span
      class="pl-kos">&gt;</span>

      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="pl-kos">&lt;</span><span
      class="pl-ent">title</span><span class="pl-kos">&gt;</span>Homepage<span class="pl-kos">&lt;/</span><span
      class="pl-ent">title</span><span class="pl-kos">&gt;</span>

      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="pl-kos">&lt;</span><span
      class="pl-ent">style</span><span class="pl-kos">&gt;</span>

      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span
      class="pl-ent">h1</span> {

      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span
      class="pl-c1">font-family</span>: monospace;

      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}

      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span
      class="pl-ent">p</span> {

      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span
      class="pl-c1">font-family</span>: fantasy;

      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}

      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="pl-kos">&lt;/</span><span
      class="pl-ent">style</span><span class="pl-kos">&gt;</span>

      &nbsp;&nbsp;&nbsp;&nbsp;<span class="pl-kos">&lt;/</span><span class="pl-ent">head</span><span
      class="pl-kos">&gt;</span></pre></div>'
  - answers:
      correct:
      - Internal Styling
      incorrect:
      - Inline Styling
    question: '&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<h1>

      <a id="user-content-------------online-library-for-all--------" class="anchor"
      href="#------------online-library-for-all--------" aria-hidden="true"><span
      aria-hidden="true" class="octicon octicon-link"></span></a>

      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Online
      Library for All!

      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</h1>

      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;

      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Free
      books here!

      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;

      &nbsp;&nbsp;&nbsp;&nbsp;'
  solution: ''
  text: "<p>In order for CSS to inform the style of the content on the page, it must\
    \ be integrated with your HTML. CSS can be integrated into your HTML in three\
    \ ways:</p>\n<ol>\n<li>inline</li>\n<li>internal</li>\n<li>external (<em>recommended</em>)</li>\n\
    </ol>\n<h2>\n<a aria-hidden=\"true\" class=\"anchor\" href=\"#option-1-inline\"\
    \ id=\"user-content-option-1-inline\"><span aria-hidden=\"true\" class=\"octicon\
    \ octicon-link\"></span></a>Option 1: Inline</h2>\n<p>Inline styling adds CSS\
    \ directly into the HTML of a page to adjust the style of particular parts of\
    \ a page.</p>\n<p>For example, if you want the text of your first paragraph to\
    \ be red, but the text of your second paragraph to be blue:</p>\n<div class=\"\
    highlight highlight-text-html-basic\"><pre><span class=\"pl-c1\">&lt;!DOCTYPE\
    \ html<span class=\"pl-kos\">&gt;</span></span>\n<span class=\"pl-kos\">&lt;</span><span\
    \ class=\"pl-ent\">html</span> <span class=\"pl-c1\">lang</span>=\"<span class=\"\
    pl-s\">en</span>\"<span class=\"pl-kos\">&gt;</span>\n\_\_\_\_<span class=\"pl-kos\"\
    >&lt;</span><span class=\"pl-ent\">head</span><span class=\"pl-kos\">&gt;</span>\n\
    \_\_\_\_\_\_\_\_<span class=\"pl-kos\">&lt;</span><span class=\"pl-ent\">title</span><span\
    \ class=\"pl-kos\">&gt;</span>About<span class=\"pl-kos\">&lt;/</span><span class=\"\
    pl-ent\">title</span><span class=\"pl-kos\">&gt;</span>\n\_\_\_\_<span class=\"\
    pl-kos\">&lt;/</span><span class=\"pl-ent\">head</span><span class=\"pl-kos\"\
    >&gt;</span>\n\_\_\_\_<span class=\"pl-kos\">&lt;</span><span class=\"pl-ent\"\
    >body</span><span class=\"pl-kos\">&gt;</span>\n\_\_\_\_\_\_\_\_<span class=\"\
    pl-kos\">&lt;</span><span class=\"pl-ent\">p</span> <span class=\"pl-c1\">style</span>=\"\
    <span class=\"pl-s\">color: red</span>\"<span class=\"pl-kos\">&gt;</span>\n\_\
    \_\_\_\_\_\_\_\_\_\_\_Content of paragraph\n\_\_\_\_\_\_\_\_<span class=\"pl-kos\"\
    >&lt;/</span><span class=\"pl-ent\">p</span><span class=\"pl-kos\">&gt;</span>\n\
    \_\_\_\_\_\_\_\_<span class=\"pl-kos\">&lt;</span><span class=\"pl-ent\">p</span>\
    \ <span class=\"pl-c1\">style</span>=\"<span class=\"pl-s\">color: blue</span>\"\
    <span class=\"pl-kos\">&gt;</span>\n\_\_\_\_\_\_\_\_\_\_\_\_Content of paragraph\n\
    \_\_\_\_\_\_\_\_<span class=\"pl-kos\">&lt;/</span><span class=\"pl-ent\">p</span><span\
    \ class=\"pl-kos\">&gt;</span>\n\_\_\_\_<span class=\"pl-kos\">&lt;/</span><span\
    \ class=\"pl-ent\">body</span><span class=\"pl-kos\">&gt;</span>\n<span class=\"\
    pl-kos\">&lt;/</span><span class=\"pl-ent\">html</span><span class=\"pl-kos\"\
    >&gt;</span></pre></div>\n<h2>\n<a aria-hidden=\"true\" class=\"anchor\" href=\"\
    #option-2-internal\" id=\"user-content-option-2-internal\"><span aria-hidden=\"\
    true\" class=\"octicon octicon-link\"></span></a>Option 2: Internal</h2>\n<p>Internal\
    \ styling also adds CSS directly into the HTML, but keeps it separate from the\
    \ content code of the page by adding it into the head using the <code>&lt;style&gt;</code>\
    \ tag. When using internal styling you are providing styling rules for the entire\
    \ page. For example, if you want all headings to be blue:</p>\n<div class=\"highlight\
    \ highlight-text-html-basic\"><pre><span class=\"pl-c1\">&lt;!DOCTYPE html<span\
    \ class=\"pl-kos\">&gt;</span></span>\n<span class=\"pl-kos\">&lt;</span><span\
    \ class=\"pl-ent\">html</span> <span class=\"pl-c1\">lang</span>=\"<span class=\"\
    pl-s\">en</span>\"<span class=\"pl-kos\">&gt;</span>\n\_\_\_\_<span class=\"pl-kos\"\
    >&lt;</span><span class=\"pl-ent\">head</span><span class=\"pl-kos\">&gt;</span>\n\
    \_\_\_\_\_\_\_\_<span class=\"pl-kos\">&lt;</span><span class=\"pl-ent\">title</span><span\
    \ class=\"pl-kos\">&gt;</span>About<span class=\"pl-kos\">&lt;/</span><span class=\"\
    pl-ent\">title</span><span class=\"pl-kos\">&gt;</span>\n\_\_\_\_\_\_\_\_<span\
    \ class=\"pl-kos\">&lt;</span><span class=\"pl-ent\">style</span><span class=\"\
    pl-kos\">&gt;</span>\n\_\_\_\_\_\_\_\_\_\_\_\_<span class=\"pl-ent\">h1</span>\
    \ {\n\_\_\_\_\_\_\_\_\_\_\_\_\_\_<span class=\"pl-c1\">color</span>: blue;\n\_\
    \_\_\_\_\_\_\_\_\_\_\_}\n\_\_\_\_\_\_\_\_<span class=\"pl-kos\">&lt;/</span><span\
    \ class=\"pl-ent\">style</span><span class=\"pl-kos\">&gt;</span>\n\_\_\_\_<span\
    \ class=\"pl-kos\">&lt;/</span><span class=\"pl-ent\">head</span><span class=\"\
    pl-kos\">&gt;</span>\n\_\_\_\_<span class=\"pl-kos\">&lt;</span><span class=\"\
    pl-ent\">body</span><span class=\"pl-kos\">&gt;</span>\n\_\_\_\_\_\_\_\_<span\
    \ class=\"pl-kos\">&lt;</span><span class=\"pl-ent\">h1</span><span class=\"pl-kos\"\
    >&gt;</span>\n\_\_\_\_\_\_\_\_\_\_\_\_Heading One\n\_\_\_\_\_\_\_\_<span class=\"\
    pl-kos\">&lt;/</span><span class=\"pl-ent\">h1</span><span class=\"pl-kos\">&gt;</span>\n\
    \_\_\_\_\_\_\_\_<span class=\"pl-kos\">&lt;</span><span class=\"pl-ent\">p</span><span\
    \ class=\"pl-kos\">&gt;</span>\n\_\_\_\_\_\_\_\_\_\_\_\_Content of paragraph\n\
    \_\_\_\_\_\_\_\_<span class=\"pl-kos\">&lt;/</span><span class=\"pl-ent\">p</span><span\
    \ class=\"pl-kos\">&gt;</span>\n\_\_\_\_\_\_\_\_<span class=\"pl-kos\">&lt;</span><span\
    \ class=\"pl-ent\">h1</span><span class=\"pl-kos\">&gt;</span>\n\_\_\_\_\_\_\_\
    \_\_\_\_\_Heading Two\n\_\_\_\_\_\_\_\_<span class=\"pl-kos\">&lt;/</span><span\
    \ class=\"pl-ent\">h1</span><span class=\"pl-kos\">&gt;</span>\n\_\_\_\_\_\_\_\
    \_<span class=\"pl-kos\">&lt;</span><span class=\"pl-ent\">p</span><span class=\"\
    pl-kos\">&gt;</span>\n\_\_\_\_\_\_\_\_\_\_\_\_Content of paragraph\n\_\_\_\_\_\
    \_\_\_<span class=\"pl-kos\">&lt;/</span><span class=\"pl-ent\">p</span><span\
    \ class=\"pl-kos\">&gt;</span>\n\_\_\_\_<span class=\"pl-kos\">&lt;/</span><span\
    \ class=\"pl-ent\">body</span><span class=\"pl-kos\">&gt;</span>\n<span class=\"\
    pl-kos\">&lt;/</span><span class=\"pl-ent\">html</span><span class=\"pl-kos\"\
    >&gt;</span></pre></div>\n<h2>\n<a aria-hidden=\"true\" class=\"anchor\" href=\"\
    #option-3-external-recommended\" id=\"user-content-option-3-external-recommended\"\
    ><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a>Option 3:\
    \ External (Recommended)</h2>\n<p>External styling creates a completely separate\
    \ document for your CSS that will be linked to your HTML in the head section of\
    \ your HTML document using the code below. This separate document is called a\
    \ <em>stylesheet</em> and is often named <code>style.css</code>. The document\
    \ is linked through a void <code>&lt;link&gt;</code> tag that lives inside the\
    \ parent <code>&lt;head&gt;</code> tag. Its <code>href</code> attribute is a relative\
    \ link to the document somewhere in relation to the document that references it.</p>\n\
    <div class=\"highlight highlight-text-html-basic\"><pre><span class=\"pl-c1\"\
    >&lt;!DOCTYPE html<span class=\"pl-kos\">&gt;</span></span>\n<span class=\"pl-kos\"\
    >&lt;</span><span class=\"pl-ent\">html</span> <span class=\"pl-c1\">lang</span>=\"\
    <span class=\"pl-s\">en</span>\"<span class=\"pl-kos\">&gt;</span>\n\_\_\_\_<span\
    \ class=\"pl-kos\">&lt;</span><span class=\"pl-ent\">head</span><span class=\"\
    pl-kos\">&gt;</span>\n\_\_\_\_\_\_\_\_<span class=\"pl-kos\">&lt;</span><span\
    \ class=\"pl-ent\">title</span><span class=\"pl-kos\">&gt;</span>CSS Example<span\
    \ class=\"pl-kos\">&lt;/</span><span class=\"pl-ent\">title</span><span class=\"\
    pl-kos\">&gt;</span>\n\_\_\_\_\_\_\_\_<span class=\"pl-kos\">&lt;</span><span\
    \ class=\"pl-ent\">link</span> <span class=\"pl-c1\">rel</span>=\"<span class=\"\
    pl-s\">stylesheet</span>\" <span class=\"pl-c1\">href</span>=\"<span class=\"\
    pl-s\">style.css</span>\" /&gt;\n\_\_\_\_<span class=\"pl-kos\">&lt;/</span><span\
    \ class=\"pl-ent\">head</span><span class=\"pl-kos\">&gt;</span>\n\_\_\_\_<span\
    \ class=\"pl-kos\">&lt;</span><span class=\"pl-ent\">body</span><span class=\"\
    pl-kos\">&gt;</span>\n\_\_\_\_\_\_\_\_...\n\_\_\_\_<span class=\"pl-kos\">&lt;/</span><span\
    \ class=\"pl-ent\">body</span><span class=\"pl-kos\">&gt;</span>\n<span class=\"\
    pl-kos\">&lt;/</span><span class=\"pl-ent\">html</span><span class=\"pl-kos\"\
    >&gt;</span></pre></div>\n<h2>\n<a aria-hidden=\"true\" class=\"anchor\" href=\"\
    #best-practices\" id=\"user-content-best-practices\"><span aria-hidden=\"true\"\
    \ class=\"octicon octicon-link\"></span></a>Best Practices</h2>\n<p>It's best\
    \ practice to use Option 3, external styling, for a number of reasons:</p>\n<ol>\n\
    <li>It helps us remember what each language focuses on: HTML is for <em>content</em>,\
    \ CSS is for <em>styling</em>. (This is sometimes referred to as the principle\
    \ of <a href=\"https://adamwathan.me/css-utility-classes-and-separation-of-concerns/\"\
    \ rel=\"nofollow\" target=\"_blank\">\"separation of concerns\"</a>)</li>\n<li>It\
    \ helps us maintain consistency across the various pages of our site as <em>multiple\
    \ HTML files can link to the same stylesheet</em>.</li>\n<li>Because multiple\
    \ HTML files can link to the same CSS file, it's not necessary to write the same\
    \ CSS code multiple times. Once suffices. (This is sometimes referred to as the\
    \ <a href=\"https://en.wikipedia.org/wiki/Don%27t_repeat_yourself\" rel=\"nofollow\"\
    \ target=\"_blank\">\"Don't Repeat Yourself\" principle</a>, or simply <em>DRY</em>.)</li>\n\
    </ol>\n<p>Option 3, external styling, is preferred by most web developers because\
    \ it's more manageable and because it lends itself to greater consistency across\
    \ the entire site.</p>"
  title: Integrating CSS and HTML
  workshop: html-css
- challenge: <p>Copy and paste the CSS rules above into your <code>style.css</code>
    file and re-save the file. Then open or refresh your <code>index.html</code> file
    in your browser and see what happens.</p>
  keywords:
  - CSS Selectors
  - Class
  - ID
  order: 12
  questions:
  - answers:
      correct:
      - By including a link to the CSS file in the HTML page's <code>&lt;head&gt;</code>
        element.
      incorrect:
      - By putting the CSS file in the same folder as the HTML page.
    question: How do we associate a CSS file with an HTML page?
  solution: ''
  text: "<p>CSS is based on selectors and declarations, which together form rule sets\
    \ (or just \"rules\"). Rule sets comprise an external styling file with a <code>.css</code>\
    \ extension. Here is the contents of a sample <code>.css</code> file:</p>\n<div\
    \ class=\"highlight highlight-source-css\"><pre><span class=\"pl-ent\">h1</span>\
    \ {\n\_\_\_\_<span class=\"pl-c1\">color</span>: orange;\n\_\_\_\_<span class=\"\
    pl-c1\">font-style</span>: italic;\n}\n<span class=\"pl-ent\">p</span> {\n\_\_\
    \_\_<span class=\"pl-c1\">font-family</span>: sans-serif;\n\_\_\_\_<span class=\"\
    pl-c1\">font-style</span>: normal;\n}\n<span class=\"pl-kos\">#</span><span class=\"\
    pl-c1\">navbar</span> {\n\_\_\_\_<span class=\"pl-c1\">background-color</span>:\
    \ yellow;\n\_\_\_\_<span class=\"pl-c1\">padding</span>: <span class=\"pl-c1\"\
    >80<span class=\"pl-smi\">px</span></span>;\n}\n.<span class=\"pl-c1\">intro</span>\
    \ {\n\_\_\_\_<span class=\"pl-c1\">font-family</span>: arial;\n\_\_\_\_<span class=\"\
    pl-c1\">background-color</span>: grey;\n\_\_\_\_<span class=\"pl-c1\">color</span>:\
    \ dark-grey;\n}</pre></div>\n<p>The first rule (which starts with the <code>h1</code>\
    \ selector) applies to all <code>&lt;h1&gt;</code> tags on each page where your\
    \ HTML document links to your stylesheet, and changes the font style and display\
    \ of those headings.</p>\n<p>The lines within the curly braces (i.e. <code>{ ...\
    \ }</code>) are called <strong>declarations</strong>, and they change the formatting\
    \ of the elements in the HTML document. Each line in the declaration sets the\
    \ value for a <strong>property</strong> and ends with a semicolon (<code>;</code>).</p>\n\
    <p>Note the different syntax being used to select items for for styling with rule\
    \ sets. The bottom two selectors are used to apply rule sets to <strong>IDs</strong>\
    \ and <strong>classes</strong>. In general, adding classes and IDs to HTML elements\
    \ allows for more specific styling\u2014more on these soon!</p>\n<h2>\n<a aria-hidden=\"\
    true\" class=\"anchor\" href=\"#what-should-happen\" id=\"user-content-what-should-happen\"\
    ><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a>What Should\
    \ Happen?</h2>\n<p>The formatting of the text on your page should change accordingly.\
    \ Your <code>&lt;h1&gt;</code> should be orange and italic, for example.</p>\n\
    <p>What are some other rules you might set for different HTML elements? Do a quick\
    \ Google search for a CSS rule that changes the appearance of your page, such\
    \ as putting a border around an element.</p>"
  title: Rule Sets
  workshop: html-css
- challenge: ''
  keywords: []
  order: 13
  questions: []
  solution: ''
  text: "<p>Some of you may be wondering whether it matters what order you add the\
    \ rule sets to your <code>style.css</code> document. The answer is no. CSS has\
    \ an automatic filtering function where <strong>the most specific rule in CSS\
    \ always takes precedence.</strong></p>\n<p>So if your stylesheet contained the\
    \ following rule sets:</p>\n<div class=\"highlight highlight-source-css\"><pre><span\
    \ class=\"pl-ent\">p</span> {\n\_\_\_\_<span class=\"pl-c1\">color</span>: green;\n\
    }\n<span class=\"pl-ent\">p</span> <span class=\"pl-ent\">strong</span> {\n\_\_\
    \_\_<span class=\"pl-c1\">color</span>: red;\n}</pre></div>\n<p>...then the text\
    \ of your paragraph would be green, but where the strong tag is found in the paragraph,\
    \ the text would be bold and red. In other words, the more specific styling for\
    \ the <code>&lt;strong&gt;</code> text in your paragraph will override the less\
    \ specific styling of the paragraph in general. This would occur <strong>regardless\
    \ of the order these rule sets appear in the stylesheet.</strong></p>\n<p>This\
    \ rule also applies to how you integrate CSS into your HTML to style your content.\
    \ For example, if you link to an external stylesheet, and you add inline or internal\
    \ CSS into your HTML, the inline or internal CSS will override the rules set in\
    \ the external stylesheet. Similarly, the inline CSS will override the internal\
    \ CSS.</p>"
  title: Filtering
  workshop: html-css
- challenge: ''
  keywords:
  - CSS Selectors
  - Class
  - ID
  order: 14
  questions:
  - answers:
      correct:
      - 'True'
      incorrect:
      - 'False'
    question: 'True or False: Classes are used to create categories of related elements,
      IDs are used create unique identifiers.'
  solution: ''
  text: "<p>Classes and IDs enable more fine-grained styling by allowing you to define\
    \ your own selectors. The difference between classes and IDs is that IDs are unique,\
    \ used to identify one specific element or part of an element, whereas classes\
    \ are used to identify multiple instances of the same type of element.</p>\n<p>Basically,\
    \ if you're styling a part of your page that is unique, such as the navbar or\
    \ footer, use an ID. If you're styling something that recurs in different places,\
    \ like an info box or form field, use a class.</p>\n<p>Incorporating classes and\
    \ IDs into the styling of your document includes two steps:</p>\n<ol>\n<li>Some\
    \ HTML code that CSS selectors can refer back to must be added to your HTML document.</li>\n\
    <li>CSS rules that select that code must be added to your style sheet.</li>\n\
    </ol>\n<p>The code for classes and IDs is different in both CSS and HTML.</p>\n\
    <h2>\n<a aria-hidden=\"true\" class=\"anchor\" href=\"#html-code\" id=\"user-content-html-code\"\
    ><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a>HTML Code</h2>\n\
    <p>In HTML, classes and ids are added to the first part of a tag. Here's an example\
    \ of what HTML code with classes and ids looks like:</p>\n<div class=\"highlight\
    \ highlight-text-html-basic\"><pre><span class=\"pl-kos\">&lt;</span><span class=\"\
    pl-ent\">ul</span> <span class=\"pl-c1\">id</span>=\"<span class=\"pl-s\">navbar</span>\"\
    <span class=\"pl-kos\">&gt;</span>\n\_\_\_\_<span class=\"pl-kos\">&lt;</span><span\
    \ class=\"pl-ent\">li</span><span class=\"pl-kos\">&gt;</span>Home<span class=\"\
    pl-kos\">&lt;/</span><span class=\"pl-ent\">li</span><span class=\"pl-kos\">&gt;</span>\n\
    \_\_\_\_<span class=\"pl-kos\">&lt;</span><span class=\"pl-ent\">li</span><span\
    \ class=\"pl-kos\">&gt;</span>About<span class=\"pl-kos\">&lt;/</span><span class=\"\
    pl-ent\">li</span><span class=\"pl-kos\">&gt;</span>\n<span class=\"pl-kos\">&lt;/</span><span\
    \ class=\"pl-ent\">ul</span><span class=\"pl-kos\">&gt;</span>\n<span class=\"\
    pl-kos\">&lt;</span><span class=\"pl-ent\">h1</span> <span class=\"pl-c1\">class</span>=\"\
    <span class=\"pl-s\">football</span>\"<span class=\"pl-kos\">&gt;</span>Football\
    \ teams<span class=\"pl-kos\">&lt;/</span><span class=\"pl-ent\">h1</span><span\
    \ class=\"pl-kos\">&gt;</span>\n<span class=\"pl-kos\">&lt;</span><span class=\"\
    pl-ent\">ul</span><span class=\"pl-kos\">&gt;</span>\n\_\_\_\_<span class=\"pl-kos\"\
    >&lt;</span><span class=\"pl-ent\">li</span> <span class=\"pl-c1\">class</span>=\"\
    <span class=\"pl-s\">football</span>\" <span class=\"pl-c1\">id</span>=\"<span\
    \ class=\"pl-s\">colts</span>\"<span class=\"pl-kos\">&gt;</span>Indianapolis\
    \ Colts<span class=\"pl-kos\">&lt;/</span><span class=\"pl-ent\">li</span><span\
    \ class=\"pl-kos\">&gt;</span>\n\_\_\_\_<span class=\"pl-kos\">&lt;</span><span\
    \ class=\"pl-ent\">li</span> <span class=\"pl-c1\">class</span>=\"<span class=\"\
    pl-s\">football</span>\" <span class=\"pl-c1\">id</span>=\"<span class=\"pl-s\"\
    >packers</span>\"<span class=\"pl-kos\">&gt;</span>Green Bay Packers<span class=\"\
    pl-kos\">&lt;/</span><span class=\"pl-ent\">li</span><span class=\"pl-kos\">&gt;</span>\n\
    <span class=\"pl-kos\">&lt;/</span><span class=\"pl-ent\">ul</span><span class=\"\
    pl-kos\">&gt;</span>\n<span class=\"pl-kos\">&lt;</span><span class=\"pl-ent\"\
    >h1</span> <span class=\"pl-c1\">class</span>=\"<span class=\"pl-s\">baseball</span>\"\
    <span class=\"pl-kos\">&gt;</span>Baseball teams<span class=\"pl-kos\">&lt;/</span><span\
    \ class=\"pl-ent\">h1</span><span class=\"pl-kos\">&gt;</span>\n<span class=\"\
    pl-kos\">&lt;</span><span class=\"pl-ent\">p</span><span class=\"pl-kos\">&gt;</span>American\
    \ League teams<span class=\"pl-kos\">&lt;/</span><span class=\"pl-ent\">p</span><span\
    \ class=\"pl-kos\">&gt;</span>\n<span class=\"pl-kos\">&lt;</span><span class=\"\
    pl-ent\">ul</span><span class=\"pl-kos\">&gt;</span>\n\_\_\_\_<span class=\"pl-kos\"\
    >&lt;</span><span class=\"pl-ent\">li</span> <span class=\"pl-c1\">class</span>=\"\
    <span class=\"pl-s\">baseball american</span>\" <span class=\"pl-c1\">id</span>=\"\
    <span class=\"pl-s\">twins</span>\"<span class=\"pl-kos\">&gt;</span>Minnesota\
    \ Twins<span class=\"pl-kos\">&lt;/</span><span class=\"pl-ent\">li</span><span\
    \ class=\"pl-kos\">&gt;</span>\n\_\_\_\_<span class=\"pl-kos\">&lt;</span><span\
    \ class=\"pl-ent\">li</span> <span class=\"pl-c1\">class</span>=\"<span class=\"\
    pl-s\">baseball american</span>\" <span class=\"pl-c1\">id</span>=\"<span class=\"\
    pl-s\">tigers</span>\"<span class=\"pl-kos\">&gt;</span>Detroit Tigers<span class=\"\
    pl-kos\">&lt;/</span><span class=\"pl-ent\">li</span><span class=\"pl-kos\">&gt;</span>\n\
    <span class=\"pl-kos\">&lt;/</span><span class=\"pl-ent\">ul</span><span class=\"\
    pl-kos\">&gt;</span>\n<span class=\"pl-kos\">&lt;</span><span class=\"pl-ent\"\
    >p</span><span class=\"pl-kos\">&gt;</span>National League teams<span class=\"\
    pl-kos\">&lt;/</span><span class=\"pl-ent\">p</span><span class=\"pl-kos\">&gt;</span>\n\
    <span class=\"pl-kos\">&lt;</span><span class=\"pl-ent\">ul</span><span class=\"\
    pl-kos\">&gt;</span>\n\_\_\_\_<span class=\"pl-kos\">&lt;</span><span class=\"\
    pl-ent\">li</span> <span class=\"pl-c1\">class</span>=\"<span class=\"pl-s\">baseball\
    \ national</span>\" <span class=\"pl-c1\">id</span>=\"<span class=\"pl-s\">dodgers</span>\"\
    <span class=\"pl-kos\">&gt;</span>Los Angeles Dodgers<span class=\"pl-kos\">&lt;/</span><span\
    \ class=\"pl-ent\">li</span><span class=\"pl-kos\">&gt;</span>\n\_\_\_\_<span\
    \ class=\"pl-kos\">&lt;</span><span class=\"pl-ent\">li</span> <span class=\"\
    pl-c1\">class</span>=\"<span class=\"pl-s\">baseball national</span>\" <span class=\"\
    pl-c1\">id</span>=\"<span class=\"pl-s\">mets</span>\"<span class=\"pl-kos\">&gt;</span>New\
    \ York Mets<span class=\"pl-kos\">&lt;/</span><span class=\"pl-ent\">li</span><span\
    \ class=\"pl-kos\">&gt;</span>\n<span class=\"pl-kos\">&lt;/</span><span class=\"\
    pl-ent\">ul</span><span class=\"pl-kos\">&gt;</span></pre></div>\n<p>Note that\
    \ it's possible to assign more than one class to an element\u2014just leave a\
    \ blank space between the two classes, as in the baseball examples above.</p>\n\
    <p>Bonus: ID selectors can be used to create links that can be used for navigation\
    \ <em>within</em> a page. For example, to add a link to the page that takes the\
    \ user directly to the line that reads \"New York Mets,\" we might write a HTML\
    \ link like this: <code>&lt;a href=\"#mets\"&gt;Mets&lt;/a&gt;</code>.</p>\n<h2>\n\
    <a aria-hidden=\"true\" class=\"anchor\" href=\"#css-selectors\" id=\"user-content-css-selectors\"\
    ><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a>CSS Selectors</h2>\n\
    <p>Class selectors in CSS are denoted with a period in front of the class name\
    \ you're creating. They look like this:</p>\n<div class=\"highlight highlight-source-css\"\
    ><pre><span class=\"pl-kos\">#</span><span class=\"pl-c1\">navbar</span> {\n\_\
    \_\_\_<span class=\"pl-c1\">padding</span>: <span class=\"pl-c1\">80<span class=\"\
    pl-smi\">px</span></span>;\n\_\_\_\_<span class=\"pl-c1\">background-color</span>:\
    \ red;\n\_\_\_\_<span class=\"pl-c1\">color</span>: white;\n}\n.<span class=\"\
    pl-c1\">football</span> {\n\_\_\_\_<span class=\"pl-c1\">font-family</span>: arial;\n\
    \_\_\_\_<span class=\"pl-c1\">background-color</span>: lightgrey;\n\_\_\_\_<span\
    \ class=\"pl-c1\">color</span>: blue;\n}\n.<span class=\"pl-c1\">baseball</span>\
    \ {\n\_\_\_\_<span class=\"pl-c1\">font-weight</span>: bold;\n\_\_\_\_<span class=\"\
    pl-c1\">color</span>: green;\n}\n.<span class=\"pl-c1\">american</span> {\n\_\_\
    \_\_<span class=\"pl-c1\">background-color</span>: yellow;\n}</pre></div>\n<h2>\n\
    <a aria-hidden=\"true\" class=\"anchor\" href=\"#id-selectors\" id=\"user-content-id-selectors\"\
    ><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a>ID Selectors</h2>\n\
    <p>...look like this in the CSS\u2014the name of the selector preceeded by a hashmark\
    \ (<code>#</code>) (also known as a pound sign or octothorpe):</p>\n<div class=\"\
    highlight highlight-source-css\"><pre><span class=\"pl-kos\">#</span><span class=\"\
    pl-c1\">navbar</span> {\n\_\_\_\_<span class=\"pl-c1\">background-color</span>:\
    \ yellow;\n\_\_\_\_<span class=\"pl-c1\">padding</span>: <span class=\"pl-c1\"\
    >80<span class=\"pl-smi\">px</span></span>;\n}</pre></div>\n<p>...and in the HTML\
    \ they are incorporated into elements like this:</p>\n<div class=\"highlight highlight-text-html-basic\"\
    ><pre><span class=\"pl-kos\">&lt;</span><span class=\"pl-ent\">ul</span> <span\
    \ class=\"pl-c1\">id</span>=\"<span class=\"pl-s\">navbar</span>\"<span class=\"\
    pl-kos\">&gt;</span>\n\_\_\_\_<span class=\"pl-kos\">&lt;</span><span class=\"\
    pl-ent\">li</span><span class=\"pl-kos\">&gt;</span>Home<span class=\"pl-kos\"\
    >&lt;/</span><span class=\"pl-ent\">li</span><span class=\"pl-kos\">&gt;</span>\n\
    \_\_\_\_<span class=\"pl-kos\">&lt;</span><span class=\"pl-ent\">li</span><span\
    \ class=\"pl-kos\">&gt;</span>About<span class=\"pl-kos\">&lt;/</span><span class=\"\
    pl-ent\">li</span><span class=\"pl-kos\">&gt;</span>\n<span class=\"pl-kos\">&lt;/</span><span\
    \ class=\"pl-ent\">ul</span><span class=\"pl-kos\">&gt;</span></pre></div>\n<h2>\n\
    <a aria-hidden=\"true\" class=\"anchor\" href=\"#tip\" id=\"user-content-tip\"\
    ><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a>Tip</h2>\n\
    <p><em>If you run into an error, be sure to check your punctuation. Oftentimes\
    \ the problem is a typo, or overlooking a semi-colon, a period, etc.</em> See\
    \ the <a href=\"https://curriculum.dhinstitutes.org/workshops/html-css/lessons/?page=17\"\
    \ rel=\"nofollow\" target=\"_blank\">Troubleshooting</a> section for more information\
    \ on common issues.</p>"
  title: Classes and IDs
  workshop: html-css
- challenge: ''
  keywords: []
  order: 15
  questions: []
  solution: ''
  text: '<p>Below is a list of useful properties that can be modified with CSS, compiled
    by Digital Fellow <a href="http://smythp.com" rel="nofollow" target="_blank">Patrick
    Smyth</a>. There are also <a href="https://courses.cs.washington.edu/courses/cse154/15sp/cheat-sheets/css-cheat-sheet.pdf"
    rel="nofollow" target="_blank">CSS cheatsheets</a> available online.</p>

    <h2>

    <a aria-hidden="true" class="anchor" href="#color" id="user-content-color"><span
    aria-hidden="true" class="octicon octicon-link"></span></a>Color</h2>

    <p>Determines text color. Can be a word or a hex value, like <code>#FFFFFF</code>:</p>

    <div class="highlight highlight-source-css"><pre><span class="pl-c1">color</span>:
    blue;

    <span class="pl-c1">color</span>: <span class="pl-pds"><span class="pl-kos">#</span>000000</span>;</pre></div>

    <h3>

    <a aria-hidden="true" class="anchor" href="#background-color" id="user-content-background-color"><span
    aria-hidden="true" class="octicon octicon-link"></span></a>Background Color</h3>

    <p>Sets the background color of an element.</p>

    <div class="highlight highlight-source-css"><pre><span class="pl-c1">background-color</span>:
    pink

    background-color: <span class="pl-pds"><span class="pl-kos">#</span>F601F6</span>;</pre></div>

    <h3>

    <a aria-hidden="true" class="anchor" href="#text-align" id="user-content-text-align"><span
    aria-hidden="true" class="octicon octicon-link"></span></a>Text Align</h3>

    <p>Aligns text to the left, center, or right.</p>

    <div class="highlight highlight-source-css"><pre><span class="pl-c1">text-align</span>:
    center;</pre></div>

    <h3>

    <a aria-hidden="true" class="anchor" href="#padding" id="user-content-padding"><span
    aria-hidden="true" class="octicon octicon-link"></span></a>Padding</h3>

    <p>The space between contents and the "box" (<code>&lt;div&gt;</code>) surrounding
    it.</p>

    <div class="highlight highlight-source-css"><pre><span class="pl-c1">padding</span>:
    <span class="pl-c1">10<span class="pl-smi">px</span></span>;

    <span class="pl-c1">padding-right</span>: <span class="pl-c1">10<span class="pl-smi">px</span></span></pre></div>

    <h3>

    <a aria-hidden="true" class="anchor" href="#margin" id="user-content-margin"><span
    aria-hidden="true" class="octicon octicon-link"></span></a>Margin</h3>

    <p>The space between an element''s box and the next element (or the edge of the
    page).</p>

    <div class="highlight highlight-source-css"><pre><span class="pl-c1">margin</span>:
    <span class="pl-c1">10<span class="pl-smi">px</span></span>;

    <span class="pl-c1">margin-top</span>: <span class="pl-c1">10<span class="pl-smi">px</span></span>;</pre></div>

    <h3>

    <a aria-hidden="true" class="anchor" href="#width-and-height" id="user-content-width-and-height"><span
    aria-hidden="true" class="octicon octicon-link"></span></a>Width and Height</h3>

    <p>Sets the width or height of an element. Typically, don''t set both of these.</p>

    <div class="highlight highlight-source-css"><pre><span class="pl-c1">width</span>:
    <span class="pl-c1">50<span class="pl-smi">%</span></span>;

    <span class="pl-c1">height</span>: <span class="pl-c1">40<span class="pl-smi">px</span></span>;</pre></div>

    <h3>

    <a aria-hidden="true" class="anchor" href="#float" id="user-content-float"><span
    aria-hidden="true" class="octicon octicon-link"></span></a>Float</h3>

    <p>Determines if text wraps around an element.</p>

    <div class="highlight highlight-source-css"><pre><span class="pl-c1">float</span>:
    left;</pre></div>

    <h3>

    <a aria-hidden="true" class="anchor" href="#display" id="user-content-display"><span
    aria-hidden="true" class="octicon octicon-link"></span></a>Display</h3>

    <p>Determines if an element is treated as a block or inline element. Can also
    be set to <code>none</code>, which makes the element disappear.</p>

    <div class="highlight highlight-source-css"><pre><span class="pl-c1">display</span>:
    inline;

    <span class="pl-c1">display</span>: block;

    <span class="pl-c1">display</span>: none;</pre></div>

    <h3>

    <a aria-hidden="true" class="anchor" href="#list-style" id="user-content-list-style"><span
    aria-hidden="true" class="octicon octicon-link"></span></a>List Style</h3>

    <p>Determines default styling on lists. Usually best to set it to <code>none</code>.</p>

    <div class="highlight highlight-source-css"><pre><span class="pl-c1">list-style-type</span>:
    none;</pre></div>

    <h3>

    <a aria-hidden="true" class="anchor" href="#font-family" id="user-content-font-family"><span
    aria-hidden="true" class="octicon octicon-link"></span></a>Font Family</h3>

    <p>Sets the font. Usually best to copy this from <a href="https://fonts.google.com/"
    rel="nofollow" target="_blank">Google Fonts</a> or another web font repository.</p>

    <div class="highlight highlight-source-css"><pre><span class="pl-c1">font-family</span>:
    <span class="pl-s">''Lato''</span><span class="pl-kos">,</span> sans-serif;</pre></div>'
  title: Useful Properties
  workshop: html-css
- challenge: ''
  keywords: []
  order: 16
  questions: []
  solution: ''
  text: '<p>Using the CSS basics we''ve just reviewed, and the list of properties
    found on the <a href="?page=15">Properties page</a> and online, give your website
    some styling.</p>

    <p>I encourage you to use an external stylesheet with classes and IDs to style
    particular aspects of your site more specifically, but feel free to also play
    around with inline and internal styling if desired.</p>

    <ul>

    <li>Change the color and size of your heading text.</li>

    <li>Change the font of your paragraph text.</li>

    <li>Change the background color of your navigation bar or menu.</li>

    <li>Center your image on your page.</li>

    <li><a href="https://github.com/DHRI-Curriculum/html-css/blob/v2.0/sections/_navbar-hint.md">Shape
    up your navigation bar.</a></li>

    </ul>

    <p><strong>Reminder:</strong> After creating a stylesheet, you must link it to
    all HTML documents that you want this styling to apply to. You can do so with
    the <code>&lt;link&gt;</code> tag:</p>

    <div class="highlight highlight-text-html-basic"><pre><span class="pl-kos">&lt;</span><span
    class="pl-ent">link</span> <span class="pl-c1">rel</span>="<span class="pl-s">stylesheet</span>"
    <span class="pl-c1">type</span>="<span class="pl-s">text/css</span>" <span class="pl-c1">href</span>="<span
    class="pl-s">style.css</span>" /&gt;</pre></div>

    <p>This will tell your HTML document to apply the style rules from the text file
    named <code>style.css</code> in the same folder.</p>'
  title: 'Challenge: Styling Your Institute Website Using CSS'
  workshop: html-css
- challenge: ''
  keywords: []
  order: 17
  questions: []
  solution: ''
  text: "<p>It is common\u2014especially in the beginning\u2014that you'll add or\
    \ amend something to/in your text editor, but it won't present when rendered by\
    \ your browser.</p>\n<p>Your first inclination should be to scan the text in your\
    \ editor for errors. Nesting will help tremendously with this task. Oftentimes\
    \ it is as little as forgetting a semicolon or closing tag.</p>\n<p>Another investigative\
    \ tactic is to <strong>View Page Source</strong> on the page opened in the browser.</p>\n\
    <p>If you think it is an <strong>error with the HTML</strong>, you'll be able\
    \ to see it there.</p>\n<p>If you think it is an <strong>error with the CSS</strong>,\
    \ then from the Page Source you'll need to click on the link for the <code>style.css</code>\
    \ page. The link to this page should be found in the head of your page. Don't\
    \ see it? That may be the problem! If you do see it, open the link to see what\
    \ CSS the browser is reading and applying to your HTML. It should match what you\
    \ have in your text editor. If it looks like an earlier version of your style\
    \ sheet, then maybe you need to re-save the document.</p>"
  title: Troubleshooting
  workshop: html-css
- challenge: ''
  keywords: []
  order: 18
  questions: []
  solution: ''
  text: "<p>Through this workshop, you have learned the basics of two of the most\
    \ commonly-used languages for building on the web: HTML and CSS.</p>\n<p>HTML,\
    \ or Hypertext Markup Language, organizes content on your page using elements\
    \ denoted by tags (<code>&lt;...&gt;</code>). When rendered by your browser, these\
    \ tags tell your browser that certain content is paragraph text, while other content\
    \ is heading or title text, and so on. You can also use image (<code>&lt;img&gt;</code>)\
    \ and link or anchor (<code>&lt;a&gt;</code>) tags to tell the browser to render\
    \ an image on the page, or take the visitor to another page on your or another\
    \ website. We also discussed some important conventions to consider when creating\
    \ HTML documents, such as nesting.</p>\n<p>CSS, or Cascading Style Sheets, allows\
    \ for further styling of your website through the application of a series of rule\
    \ sets that are applied to different aspects/elements of your site. In order for\
    \ CSS to render on a webpage, it must be integrated with your html, which can\
    \ happen in three ways: inline, internal, and external. CSS rules can be of varying\
    \ specificity, and in particular, through creating classes and IDs. We also discussed\
    \ how the ordering of rule sets doesn't matter, because an important function\
    \ of CSS is the way it filters and applies rules in accordance with the specificity\
    \ of the rule.</p>\n<p>Through understanding these languages in combination with\
    \ one another, you can also reframe your understanding of the web\u2014not as\
    \ <em>poof! magic!</em>, but as a series of intentionally styled, hyperlinked\
    \ text documents, with each website representing a folder of documents.</p>\n\
    <p>While this is a good starting point, one important question remains: how can\
    \ I get these text documents on the Internet so they can be accessed, and interacted\
    \ with, and linked to by others? This is what we will discuss in the final lesson\
    \ of this workshop.</p>"
  title: Workshop Summary
  workshop: html-css
- challenge: ''
  keywords:
  - FTP
  - Web Hosting
  order: 19
  questions: []
  solution: ''
  text: "<p>Great job! Now you have an amazing website, but it's stuck on your computer\
    \ where no one else can find it or view it. How do you get your website onto the\
    \ Internet so it can be shared?</p>\n<p>To get your site on the internet, you'll\
    \ need <strong>hosting</strong>\u2014that is, a remote computer that will stay\
    \ on day in and day out to serve the website to visitors. In theory, you could\
    \ host your website on your own computer, but in practice, it usually makes sense\
    \ to purchase hosting from a hosting company or use a free service.</p>\n<p>You'll\
    \ also need a way of getting your website to your host. That's where FTP, or File\
    \ Transfer Protocol, comes in.</p>\n<h2>\n<a aria-hidden=\"true\" class=\"anchor\"\
    \ href=\"#ftp\" id=\"user-content-ftp\"><span aria-hidden=\"true\" class=\"octicon\
    \ octicon-link\"></span></a>FTP</h2>\n<p>FTP is a protocol used to share files\
    \ from your computer (<em>a client</em>) to another computer called a server,\
    \ and back again over the Internet. This is something we do ALL THE TIME, but\
    \ we refer to it as \"uploading\" and \"downloading.\"</p>\n<p>Note: Though FTP\
    \ stands for file transfer protocol, you are not really transfering or moving\
    \ your files from your computer; instead they are <em>copied</em> to the server.\
    \ Fear not!</p>\n<p>In order to transfer your website files (also called your\
    \ website's directory) to a server you will need:</p>\n<ol>\n<li>Access to the\
    \ Internet.</li>\n<li>An FTP Client.</li>\n<li>A server that is connected to the\
    \ Internet where you can send your files.</li>\n</ol>\n<p>Assuming you all can\
    \ manage accessing the internet on your own, let's focus on the latter two.</p>\n\
    <h3>\n<a aria-hidden=\"true\" class=\"anchor\" href=\"#ftp-client\" id=\"user-content-ftp-client\"\
    ><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a>FTP client</h3>\n\
    <p>An <strong>FTP client</strong> is software designed specifically for the purpose\
    \ of sharing files between computers. There are widely-used, freely-available\
    \ GUI applications (i.e., applications that use a graphic user interface, or the\
    \ point-and-click, user-friendly software interfaces you are used to) that you\
    \ can download for use, including <a href=\"https://filezilla-project.org/\" rel=\"\
    nofollow\" target=\"_blank\">Filezilla</a> and <a href=\"https://cyberduck.io/\"\
    \ rel=\"nofollow\" target=\"_blank\">Cyberduck</a>. You can also run an FTP client\
    \ program through the command line on most computers, though the process varies\
    \ by operating system.</p>\n<h3>\n<a aria-hidden=\"true\" class=\"anchor\" href=\"\
    #other-resources-about-ftp\" id=\"user-content-other-resources-about-ftp\"><span\
    \ aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a>Other Resources\
    \ about FTP</h3>\n<ul>\n<li><a href=\"https://www.wired.com/2010/02/ftp_for_beginners/\"\
    \ rel=\"nofollow\" target=\"_blank\">FTP for Beginners, <em>Wired</em></a></li>\n\
    <li><a href=\"https://www.makeuseof.com/tag/free-ftp-clients-windows/\" rel=\"\
    nofollow\" target=\"_blank\">The Three Best FTP Clients for Windows</a></li>\n\
    <li><a href=\"http://www.techradar.com/how-to/software/operating-systems/how-to-use-ftp-through-the-command-line-in-mac-os-x-1305664\"\
    \ rel=\"nofollow\" target=\"_blank\">How To Use FTP Through the Command Line in\
    \ Mac OS X</a></li>\n<li><a href=\"https://beebom.com/how-to-use-mac-terminal-ftp-sftp-client/\"\
    \ rel=\"nofollow\" target=\"_blank\">How to Use the Mac Terminal as an FTP or\
    \ SFTP Client</a></li>\n</ul>\n<h2>\n<a aria-hidden=\"true\" class=\"anchor\"\
    \ href=\"#web-hosting\" id=\"user-content-web-hosting\"><span aria-hidden=\"true\"\
    \ class=\"octicon octicon-link\"></span></a>Web Hosting</h2>\n<p>You also need\
    \ a server to transfer your files to, where they can be stored and shared on the\
    \ Internet. This is what we call <strong>web hosting</strong> and there are multiple\
    \ options here as well. The GCDI (CUNY Graduate Center Digital Initiatives) website\
    \ contains a list of <a href=\"https://gcdi.commons.gc.cuny.edu/digital-resource-guide/#cloud\"\
    \ rel=\"nofollow\" target=\"_blank\">low-cost cloud hosting services for students</a>.\
    \ As long as your site is just plain HTML and CSS, it's also possible to host\
    \ your website for free on services such as <a href=\"https://pages.github.com/\"\
    \ target=\"_blank\">GitHub Pages</a>.</p>\n<h3>\n<a aria-hidden=\"true\" class=\"\
    anchor\" href=\"#guides-to-web-hosting-services\" id=\"user-content-guides-to-web-hosting-services\"\
    ><span aria-hidden=\"true\" class=\"octicon octicon-link\"></span></a>Guides to\
    \ Web Hosting Services</h3>\n<ul>\n<li><a href=\"https://www.makeuseof.com/tag/best-web-hosting-services/\"\
    \ rel=\"nofollow\" target=\"_blank\">The Best Web Hosting Services</a></li>\n\
    <li><a href=\"https://www.makeuseof.com/tag/top-7-easy-and-free-web-hosting-services/\"\
    \ rel=\"nofollow\" target=\"_blank\">Top 7 Easy and Free Web Hosting Services</a></li>\n\
    <li><a href=\"https://www.makeuseof.com/tag/free-web-hosting-is-bad/\" rel=\"\
    nofollow\" target=\"_blank\">10 Ways That Free Web Hosting Is Bad for Your First\
    \ Website</a></li>\n</ul>"
  title: Making your Website Public
  workshop: html-css
praxis:
  discussion_questions:
  - label: In this workshop, we have focused on the fundametals of HTML and CSS. The
      point was to provide an introduction to the workings of websites. In practice,
      however, the websites that we desire to build will have complex use cases. What
      are some websites that you imagine building? What kinds of interactive features
      would you like to have in your website?
    order: 1
    workshop: html-css
  - label: Some websites provide information clearly and in an enaging manner. Others
      might inundate with a barrage of content that leaves one mystified. What would
      you say are some of the characteristics of well-designed websites? Which websites
      do you consider a joy to use? What design elements (such as font, color, layout,
      and menus) stand out to you as being particularly important in making good websites?
    order: 2
    workshop: html-css
  further_projects: []
  further_readings: []
  intro: '<p>This workshop has provided an introduction to HTML and CSS. Through its
    discussion of tags, elements, and attributes, we have tried to cover the basic
    ways in which web pages are initially constructed in plaintext and then rendered
    on browsers. As we concieve of digital humanities projects, however, our visions
    quickly exceed the capacity of the commands that was covered in this workshop.
    Not only might we be interested in making information public on the internet,
    but we might also be interested in providing tools that facilitate interactivity
    and ease of use with the content that we are curating. Building these tools and
    incorporating them in our websites requires the additional knowledge of languages
    like javascript, SQL, and python, among many others. Digital humanities projects
    are often collaborative endeavors and bringing someone into the project who has
    these skills is an effective way to building well-designed websites.

    Another way to build more complex design and functionality into your websites
    is by using a Content Management System (CMS), which refers to a suite of tools
    that facilitates easy website development and hosting on the internet. Most modern-day
    websites require functionalities that strains the limits of HTML and CSS. Content
    Management Systems allow users without any familiarity with advanced web-design
    languages and concepts to quickly build websites that are visually appealing and
    contain a variety of features. CMS platforms often provide a variety of tools
    that users can simply click, drag, and input content to create websites. No coding
    required! Popular content management systems in the digital humanities include
    <a href="https://www.omeka.net/" rel="nofollow">Omeka</a>, <a href="https://scalar.me/anvc/scalar/"
    rel="nofollow">Scalar</a>, <a href="https://www.springshare.com/libguides/" rel="nofollow">Libguides</a>,
    and <a href="https://wordpress.org/" rel="nofollow">Wordpress</a>. These CMS have
    robust documentation and an active user community, both of which can help solve
    issues in website development. The suggested readings and tutorials provided below
    link to more information on selecting and using a CMS.</p>'
  next_steps: []
  tutorials:
  - annotation: '[W3School HTML Tutorial](https://www.w3schools.com/html/default.asp)
      provides an indepth overview of HTML and introduces a number of commands and
      protocols not covered in our introductory workshop.  '
    label: W3School HTML Tutorial
    url: https://www.w3schools.com/html/default.asp
  - annotation: '[W3Schools CSS Tutorial](https://www.w3schools.com/css/default.asp)
      covers a lot more ground with CSS and provides very helpful "how to" guides
      for making menus and integrating with other websites.'
    label: W3Schools CSS Tutorial
    url: https://www.w3schools.com/css/default.asp
  - annotation: '[Omeka](https://www.omeka.net/) is a platform for building digital
      archives and digital exhibits. It is designed to help those without deep technical
      knowledge build simple interactive websites. Instead of using HTML and CSS,
      Omeka provides a [Graphical User Interface](https://en.wikipedia.org/wiki/Graphical_user_interface)
      for building websites. Omeka is a wonderful point of beginning to understand
      how a content management system works. Graduate Center Digital Fellow and digital
      archivist, Stefano Morello, has put together a very helpful workshop on [getting
      started with Omeka](https://github.com/GCDigitalFellows/omeka).'
    label: Omeka
    url: https://www.omeka.net
  - annotation: '[Wordpress](https://wordpress.org/) is the most widely used content
      management service. Similar to Omeka, it provides a Graphical User Interface
      for building websites. However, unlike Omeka, Wordpress provides many additional
      functionalities that vary in their use, scale, and complexity. Wordpress can
      be used to make a variety of different kinds of websites, from course-websites
      to scholarly publications, and much more. The [Wordpress Turorial for Beginners](https://wordpress.com/learn/)
      provides a helpful introduction to this tool. '
    label: Wordpress
    url: https://wordpress.org
  - annotation: '[Github Pages](https://pages.github.com/) can be useful to more advanced
      users for hosting HTML/CSS files and publishing them directly on the internet.
      It draws on a Github repository to build static websites. Websites that are
      hosted on Github pages tend to have a URL that ends in `github.io`. The official
      Github documentation has a well written guide on [creating a Github Pages site](https://docs.github.com/en/github/working-with-github-pages/creating-a-github-pages-site).'
    label: Github Pages
    url: https://pages.github.com
  workshop: html-css
workshop:
  name: Introduction to HTML and CSS
  parent_backend: Github
  parent_branch: v2.0
  parent_repo: DHRI-Curriculum/html-css
  slug: html-css
